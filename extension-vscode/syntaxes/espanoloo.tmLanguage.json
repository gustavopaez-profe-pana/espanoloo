{
  "information_for_contributors": [
    "This file has been converted from https://github.com/atom/language-python/blob/master/grammars/python.cson",
    "If you want to provide a fix or improvement, please create a pull request against the original repository.",
    "Once accepted there, we are happy to receive an update request."
  ],
  "version": "https://github.com/atom/language-python/commit/699c7f1e0c7a0f9c8597e4ce5f0f0d4c9f7f7f7f",
  "name": "Espa√±olOO",
  "scopeName": "source.espanoloo",
  "patterns": [
    {
      "include": "#imports"
    },
    {
      "include": "#function-declarations"
    },
    {
      "include": "#class-declarations"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#comments"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.espanoloo",
          "match": "\b(clase|funcion|si|sino|mientras|para|retornar|publico|privado|protegido|nuevo|este|super|hereda|implementa|abstracto|interfaz|intentar|atrapar|finalmente|lanzar|afirmar|nulo|verdadero|falso|entero|decimal|cadena|booleano|en|constante)\b"
        },
        {
          "name": "keyword.operator.espanoloo",
          "match": "\b(y|o|no)\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.espanoloo",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.espanoloo",
              "match": "\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.espanoloo",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.espanoloo",
              "match": "\\."
            }
          ]
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.espanoloo",
          "match": "\b([0-9]+(\.[0-9]+)?|[0-9]+)([eE][+-]?[0-9]+)?\b"
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.espanoloo",
          "begin": "//",
          "end": "$"
        },
        {
          "name": "comment.block.espanoloo",
          "begin": "/\*",
          "end": "\*/"
        }
      ]
    },
    "function-declarations": {
      "patterns": [
        {
          "name": "entity.name.function.espanoloo",
          "match": "\b(funcion)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s*\(",
          "captures": {
            "1": { "name": "keyword.control.espanoloo" },
            "2": { "name": "entity.name.function.espanoloo" }
          }
        }
      ]
    },
    "class-declarations": {
      "patterns": [
        {
          "name": "entity.name.type.class.espanoloo",
          "match": "\b(clase|interfaz)\s+([a-zA-Z_][a-zA-Z0-9_]*)",
          "captures": {
            "1": { "name": "keyword.control.espanoloo" },
            "2": { "name": "entity.name.type.class.espanoloo" }
          }
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "name": "keyword.control.import.espanoloo",
          "match": "\b(importar|desde)\b"
        }
      ]
    }
  }
}