
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programarightASIGNACIONASIGNACION_SUMAASIGNACION_RESTAASIGNACION_MULTIPLICACIONASIGNACION_DIVISIONASIGNACION_MODULOrightINTERROGACIONDOS_PUNTOSleftOleftYleftIGUALNO_IGUALleftMENOR_QUEMAYOR_QUEMENOR_IGUAL_QUEMAYOR_IGUAL_QUEleftSUMARESTAleftMULTIPLICACIONDIVISIONMODULOrightNOUMINUSleftINCREMENTODECREMENTOleftLPARENRPARENLBRACKETRBRACKETleftPUNTOrightSINOABSTRACTO AFIRMAR ASIGNACION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTIPLICACION ASIGNACION_RESTA ASIGNACION_SUMA ATRAPAR BOOLEANO_TIPO CADENA CADENA_TIPO CLASE COMA CONSTANTE CONSTRUCTOR CONTINUAR DECIMAL DECIMAL_TIPO DECREMENTO DIVISION DOS_PUNTOS EN ENTERO ENTERO_TIPO ESTE FALSO FINALMENTE FUNCION HACER HEREDA IDENTIFICADOR IGUAL IMPLEMENTA INCREMENTO INTENTAR INTERFAZ INTERROGACION LAMBDA LANZAR LBRACE LBRACKET LPAREN MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MIENTRAS MODULO MULTIPLICACION NO NO_IGUAL NUEVO NULO O PARA PRIVADO PROTEGIDO PUBLICO PUNTO PUNTO_Y_COMA RBRACE RBRACKET RESTA RETORNAR ROMPER RPAREN SI SINO SUMA SUPER TIPO_EXCEPCION VERDADERO Yprograma : lista_declaracioneslista_declaraciones : lista_declaraciones declaracion\n| emptydeclaracion : declaracion_clase\n| declaracion_funcion\n| declaracion_variable\n| sentenciadeclaracion_variable : IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAdeclaracion_funcion : FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentenciasdeclaracion_clase : CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACEhereda_opcional : HEREDA IDENTIFICADOR\n| emptylista_miembros_clase : lista_miembros_clase miembro_clase\n| emptymiembro_clase : declaracion_atributo\n| declaracion_funciondeclaracion_atributo : modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAmodificador_acceso : PUBLICO\n| PRIVADO\n| PROTEGIDO\n| emptysentencia : sentencia_expresion\n| bloque_sentencias\n| sentencia_si\n| sentencia_mientras\n| sentencia_para\n| sentencia_retornar\n| sentencia_romper\n| sentencia_continuarsentencia_expresion : expresion PUNTO_Y_COMAbloque_sentencias : LBRACE lista_declaraciones RBRACEsentencia_si : SI LPAREN expresion RPAREN sentencia\n| SI LPAREN expresion RPAREN sentencia SINO sentenciasentencia_mientras : MIENTRAS LPAREN expresion RPAREN sentenciasentencia_para : PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentenciapara_inicializador : declaracion_variable\n| expresion\n| emptypara_condicion : expresion\n| emptypara_incremento : expresion\n| emptysentencia_retornar : RETORNAR PUNTO_Y_COMA\n| RETORNAR expresion PUNTO_Y_COMAsentencia_romper : ROMPER PUNTO_Y_COMAsentencia_continuar : CONTINUAR PUNTO_Y_COMAexpresion : asignacionasignacion : logica_or\n| unario ASIGNACION asignacionlogica_or : logica_and\n| logica_or O logica_andlogica_and : igualdad\n| logica_and Y igualdadigualdad : comparacion\n| igualdad IGUAL comparacion\n| igualdad NO_IGUAL comparacioncomparacion : termino\n| comparacion MENOR_QUE termino\n| comparacion MAYOR_QUE termino\n| comparacion MENOR_IGUAL_QUE termino\n| comparacion MAYOR_IGUAL_QUE terminotermino : factor\n| termino SUMA factor\n| termino RESTA factorfactor : unario\n| factor MULTIPLICACION unario\n| factor DIVISION unario\n| factor MODULO unariounario : llamada\n| NO unario\n| RESTA unario %prec UMINUSllamada : primaria\n| llamada LPAREN lista_argumentos_opcional RPAREN\n| llamada PUNTO IDENTIFICADORprimaria : VERDADERO\n| FALSO\n| NULO\n| ENTERO\n| DECIMAL\n| CADENA\n| IDENTIFICADOR\n| ESTE\n| SUPER\n| LPAREN expresion RPARENtipo : ENTERO_TIPO\n| DECIMAL_TIPO\n| CADENA_TIPO\n| BOOLEANO_TIPO\n| IDENTIFICADOR\n| NULOtipo_retorno : DOS_PUNTOS tipo\n| emptylista_parametros_opcional : lista_parametros\n| emptylista_parametros : parametro\n| lista_parametros COMA parametroparametro : IDENTIFICADOR DOS_PUNTOS tipolista_argumentos_opcional : lista_argumentos\n| emptylista_argumentos : expresion\n| lista_argumentos COMA expresionempty :'
    
_lr_action_items = {'CLASE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,141,142,147,156,165,167,174,],[-104,9,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,9,-32,-45,-47,-48,-33,-46,-8,-34,-36,-11,-9,-10,-35,-37,]),'FUNCION':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,121,123,135,136,141,142,147,148,149,150,156,165,167,174,175,178,],[-104,12,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,12,-32,-45,-47,-48,-33,-46,-104,-8,12,-15,-34,-36,-11,-14,-16,-17,-9,-10,-35,-37,-18,-19,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,11,12,13,14,16,17,18,19,20,21,22,26,34,35,50,51,55,56,57,58,59,61,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,82,91,92,100,121,123,124,130,131,132,134,135,136,138,140,141,142,147,148,149,150,151,152,153,154,155,156,159,162,163,165,167,171,172,174,175,176,178,],[-104,10,-3,-2,-4,-5,-6,-7,49,-104,52,54,-25,-24,-26,-27,-28,-29,-30,-31,54,54,54,84,10,-32,54,54,10,-45,-47,-48,54,54,54,54,109,54,54,54,54,54,54,54,54,54,54,54,122,-33,125,-46,-104,-8,54,54,54,54,54,-104,-15,84,125,-34,-36,-11,-14,-16,-17,164,-20,-21,-22,-23,-9,84,54,54,-10,-35,84,54,-37,-18,54,-19,]),'LBRACE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,49,51,55,59,61,62,81,83,84,86,87,88,89,90,91,100,122,123,130,131,139,141,142,147,156,158,160,162,165,166,167,172,174,],[-104,11,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,-104,11,-32,-45,-47,-48,121,-13,-91,-87,-88,-89,-90,-92,-33,-46,-12,-8,11,11,-104,-34,-36,-11,-9,11,-94,11,-10,-93,-35,11,-37,]),'SI':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,23,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,23,-32,-45,-47,-48,-33,-46,-8,23,23,-34,-36,-11,-9,23,-10,-35,23,-37,]),'MIENTRAS':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,24,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,24,-32,-45,-47,-48,-33,-46,-8,24,24,-34,-36,-11,-9,24,-10,-35,24,-37,]),'PARA':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,25,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,25,-32,-45,-47,-48,-33,-46,-8,25,25,-34,-36,-11,-9,25,-10,-35,25,-37,]),'RETORNAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,26,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,26,-32,-45,-47,-48,-33,-46,-8,26,26,-34,-36,-11,-9,26,-10,-35,26,-37,]),'ROMPER':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,27,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,27,-32,-45,-47,-48,-33,-46,-8,27,27,-34,-36,-11,-9,27,-10,-35,27,-37,]),'CONTINUAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,123,130,131,141,142,147,156,162,165,167,172,174,],[-104,28,-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,28,-32,-45,-47,-48,-33,-46,-8,28,28,-34,-36,-11,-9,28,-10,-35,28,-37,]),'NO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,34,-3,-2,-4,-5,-6,-7,-104,34,-25,-24,-26,-27,-28,-29,-30,-31,34,34,34,34,-32,34,34,34,-45,-47,-48,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-33,-46,-8,34,34,34,34,34,-34,-36,-11,-9,34,34,-10,-35,34,-37,34,]),'RESTA':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,26,31,33,34,35,37,39,40,41,42,43,44,45,46,47,48,51,54,55,56,57,58,59,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,91,93,100,102,109,112,113,114,115,116,117,118,119,120,123,124,130,131,132,133,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,35,-3,-2,-4,-5,-6,-7,-83,-104,35,-25,-24,-26,-27,-28,-29,-30,-31,35,-67,-71,35,35,-74,-77,-78,-79,-80,-81,-82,-84,-85,77,-64,35,-83,-32,35,35,35,-45,-47,-48,35,35,35,35,-72,-73,35,35,35,35,35,35,35,35,35,35,35,-33,-86,-46,-67,-76,77,77,77,77,-65,-66,-68,-69,-70,-8,35,35,35,35,-75,35,-34,-36,-11,-9,35,35,-10,-35,35,-37,35,]),'VERDADERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,39,-3,-2,-4,-5,-6,-7,-104,39,-25,-24,-26,-27,-28,-29,-30,-31,39,39,39,39,-32,39,39,39,-45,-47,-48,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-33,-46,-8,39,39,39,39,39,-34,-36,-11,-9,39,39,-10,-35,39,-37,39,]),'FALSO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,40,-3,-2,-4,-5,-6,-7,-104,40,-25,-24,-26,-27,-28,-29,-30,-31,40,40,40,40,-32,40,40,40,-45,-47,-48,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-33,-46,-8,40,40,40,40,40,-34,-36,-11,-9,40,40,-10,-35,40,-37,40,]),'NULO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,50,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,138,141,142,147,156,159,162,163,165,167,171,172,174,176,],[-104,41,-3,-2,-4,-5,-6,-7,-104,41,-25,-24,-26,-27,-28,-29,-30,-31,41,41,41,90,41,-32,41,41,41,-45,-47,-48,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-33,-46,-8,41,41,41,41,41,90,-34,-36,-11,-9,90,41,41,-10,-35,90,41,-37,41,]),'ENTERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,42,-3,-2,-4,-5,-6,-7,-104,42,-25,-24,-26,-27,-28,-29,-30,-31,42,42,42,42,-32,42,42,42,-45,-47,-48,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-33,-46,-8,42,42,42,42,42,-34,-36,-11,-9,42,42,-10,-35,42,-37,42,]),'DECIMAL':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,43,-3,-2,-4,-5,-6,-7,-104,43,-25,-24,-26,-27,-28,-29,-30,-31,43,43,43,43,-32,43,43,43,-45,-47,-48,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-33,-46,-8,43,43,43,43,43,-34,-36,-11,-9,43,43,-10,-35,43,-37,43,]),'CADENA':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,44,-3,-2,-4,-5,-6,-7,-104,44,-25,-24,-26,-27,-28,-29,-30,-31,44,44,44,44,-32,44,44,44,-45,-47,-48,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-33,-46,-8,44,44,44,44,44,-34,-36,-11,-9,44,44,-10,-35,44,-37,44,]),'ESTE':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,45,-3,-2,-4,-5,-6,-7,-104,45,-25,-24,-26,-27,-28,-29,-30,-31,45,45,45,45,-32,45,45,45,-45,-47,-48,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-33,-46,-8,45,45,45,45,45,-34,-36,-11,-9,45,45,-10,-35,45,-37,45,]),'SUPER':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,26,34,35,51,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,100,123,124,130,131,132,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,46,-3,-2,-4,-5,-6,-7,-104,46,-25,-24,-26,-27,-28,-29,-30,-31,46,46,46,46,-32,46,46,46,-45,-47,-48,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-33,-46,-8,46,46,46,46,46,-34,-36,-11,-9,46,46,-10,-35,46,-37,46,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,23,24,25,26,33,34,35,37,39,40,41,42,43,44,45,46,51,52,54,55,56,57,58,59,61,62,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,91,93,100,109,123,124,130,131,132,133,134,141,142,147,156,162,163,165,167,172,174,176,],[-104,13,-3,-2,-4,-5,-6,-7,-83,-104,13,-25,-24,-26,-27,-28,-29,-30,-31,56,57,58,13,66,13,13,-74,-77,-78,-79,-80,-81,-82,-84,-85,13,92,-83,-32,13,13,13,-45,-47,-48,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-33,-86,-46,-76,-8,13,13,13,13,-75,13,-34,-36,-11,-9,13,13,-10,-35,13,-37,13,]),'$end':([0,1,2,3,4,5,6,7,8,14,16,17,18,19,20,21,22,55,59,61,62,91,100,123,141,142,147,156,165,167,174,],[-104,0,-1,-3,-2,-4,-5,-6,-7,-25,-24,-26,-27,-28,-29,-30,-31,-32,-45,-47,-48,-33,-46,-8,-34,-36,-11,-9,-10,-35,-37,]),'RBRACE':([3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,51,55,59,61,62,91,100,121,123,135,136,141,142,147,148,149,150,156,165,167,174,175,178,],[-3,-2,-4,-5,-6,-7,-104,-25,-24,-26,-27,-28,-29,-30,-31,91,-32,-45,-47,-48,-33,-46,-104,-8,147,-15,-34,-36,-11,-14,-16,-17,-9,-10,-35,-37,-18,-19,]),'DOS_PUNTOS':([10,125,139,164,],[50,138,159,171,]),'PUNTO':([10,33,37,39,40,41,42,43,44,45,46,54,93,109,133,],[-83,67,-74,-77,-78,-79,-80,-81,-82,-84,-85,-83,-86,-76,-75,]),'ASIGNACION':([10,31,33,37,39,40,41,42,43,44,45,46,54,68,69,84,85,86,87,88,89,90,93,109,133,173,],[-83,64,-71,-74,-77,-78,-79,-80,-81,-82,-84,-85,-83,-72,-73,-91,124,-87,-88,-89,-90,-92,-86,-76,-75,176,]),'MULTIPLICACION':([10,31,33,37,39,40,41,42,43,44,45,46,48,54,68,69,93,102,109,116,117,118,119,120,133,],[-83,-67,-71,-74,-77,-78,-79,-80,-81,-82,-84,-85,78,-83,-72,-73,-86,-67,-76,78,78,-68,-69,-70,-75,]),'DIVISION':([10,31,33,37,39,40,41,42,43,44,45,46,48,54,68,69,93,102,109,116,117,118,119,120,133,],[-83,-67,-71,-74,-77,-78,-79,-80,-81,-82,-84,-85,79,-83,-72,-73,-86,-67,-76,79,79,-68,-69,-70,-75,]),'MODULO':([10,31,33,37,39,40,41,42,43,44,45,46,48,54,68,69,93,102,109,116,117,118,119,120,133,],[-83,-67,-71,-74,-77,-78,-79,-80,-81,-82,-84,-85,80,-83,-72,-73,-86,-67,-76,80,80,-68,-69,-70,-75,]),'SUMA':([10,31,33,37,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,109,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,-74,-77,-78,-79,-80,-81,-82,-84,-85,76,-64,-83,-72,-73,-86,-67,-76,76,76,76,76,-65,-66,-68,-69,-70,-75,]),'MENOR_QUE':([10,31,33,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,-74,72,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,-76,72,72,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'MAYOR_QUE':([10,31,33,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,-74,73,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,-76,73,73,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'MENOR_IGUAL_QUE':([10,31,33,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,-74,74,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,-76,74,74,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'MAYOR_IGUAL_QUE':([10,31,33,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,-74,75,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,-76,75,75,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'IGUAL':([10,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,104,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,70,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,70,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'NO_IGUAL':([10,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,102,104,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,-71,71,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-67,71,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'Y':([10,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,101,102,104,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,-67,65,-71,-54,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,65,-67,-55,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'O':([10,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,93,101,102,104,109,110,111,112,113,114,115,116,117,118,119,120,133,],[-83,63,-67,-52,-71,-54,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-86,-53,-67,-55,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,-75,]),'PUNTO_Y_COMA':([10,15,26,27,28,29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,58,60,68,69,84,85,86,87,88,89,90,93,96,97,98,99,101,102,103,104,109,110,111,112,113,114,115,116,117,118,119,120,123,132,133,137,143,144,145,156,173,177,],[-83,55,59,61,62,-49,-50,-67,-52,-71,-54,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-104,100,-72,-73,-91,123,-87,-88,-89,-90,-92,-86,132,-38,-39,-40,-53,-67,-51,-55,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,-8,-104,-75,156,163,-41,-42,-9,175,178,]),'SINO':([14,16,17,18,19,20,21,22,55,59,61,62,91,100,141,142,167,174,],[-25,-24,-26,-27,-28,-29,-30,-31,-32,-45,-47,-48,-33,-46,162,-36,-35,-37,]),'RPAREN':([29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,53,54,66,68,69,84,86,87,88,89,90,92,93,94,95,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,126,127,128,129,133,146,157,161,163,168,169,170,],[-49,-50,-67,-52,-71,-54,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,93,-83,-104,-72,-73,-91,-87,-88,-89,-90,-92,-104,-86,130,131,-53,-67,-51,-55,133,-100,-101,-102,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,139,-95,-96,-97,-75,-103,-99,-98,-104,172,-43,-44,]),'COMA':([29,30,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,54,68,69,84,86,87,88,89,90,93,101,102,103,104,106,108,109,110,111,112,113,114,115,116,117,118,119,120,127,129,133,146,157,161,],[-49,-50,-67,-52,-71,-54,-74,-56,-77,-78,-79,-80,-81,-82,-84,-85,-59,-64,-83,-72,-73,-91,-87,-88,-89,-90,-92,-86,-53,-67,-51,-55,134,-102,-76,-57,-58,-60,-61,-62,-63,-65,-66,-68,-69,-70,140,-97,-75,-103,-99,-98,]),'HEREDA':([49,],[82,]),'ENTERO_TIPO':([50,138,159,171,],[86,86,86,86,]),'DECIMAL_TIPO':([50,138,159,171,],[87,87,87,87,]),'CADENA_TIPO':([50,138,159,171,],[88,88,88,88,]),'BOOLEANO_TIPO':([50,138,159,171,],[89,89,89,89,]),'PUBLICO':([91,121,135,136,148,149,150,165,175,178,],[-33,-104,152,-15,-14,-16,-17,-10,-18,-19,]),'PRIVADO':([91,121,135,136,148,149,150,165,175,178,],[-33,-104,153,-15,-14,-16,-17,-10,-18,-19,]),'PROTEGIDO':([91,121,135,136,148,149,150,165,175,178,],[-33,-104,154,-15,-14,-16,-17,-10,-18,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaraciones':([0,11,],[2,51,]),'empty':([0,11,49,58,66,92,121,132,135,139,163,],[3,3,83,99,107,128,136,145,155,160,170,]),'declaracion':([2,51,],[4,4,]),'declaracion_clase':([2,51,],[5,5,]),'declaracion_funcion':([2,51,135,],[6,6,150,]),'declaracion_variable':([2,51,58,],[7,7,97,]),'sentencia':([2,51,130,131,162,172,],[8,8,141,142,167,174,]),'bloque_sentencias':([2,51,130,131,158,162,172,],[14,14,14,14,165,14,14,]),'expresion':([2,13,26,51,56,57,58,66,124,130,131,132,134,162,163,172,176,],[15,53,60,15,94,95,98,108,137,15,15,144,146,15,169,15,177,]),'sentencia_expresion':([2,51,130,131,162,172,],[16,16,16,16,16,16,]),'sentencia_si':([2,51,130,131,162,172,],[17,17,17,17,17,17,]),'sentencia_mientras':([2,51,130,131,162,172,],[18,18,18,18,18,18,]),'sentencia_para':([2,51,130,131,162,172,],[19,19,19,19,19,19,]),'sentencia_retornar':([2,51,130,131,162,172,],[20,20,20,20,20,20,]),'sentencia_romper':([2,51,130,131,162,172,],[21,21,21,21,21,21,]),'sentencia_continuar':([2,51,130,131,162,172,],[22,22,22,22,22,22,]),'asignacion':([2,13,26,51,56,57,58,64,66,124,130,131,132,134,162,163,172,176,],[29,29,29,29,29,29,29,103,29,29,29,29,29,29,29,29,29,29,]),'logica_or':([2,13,26,51,56,57,58,64,66,124,130,131,132,134,162,163,172,176,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'unario':([2,13,26,34,35,51,56,57,58,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,124,130,131,132,134,162,163,172,176,],[31,31,31,68,69,31,31,31,31,102,31,102,31,102,102,102,102,102,102,102,102,118,119,120,31,31,31,31,31,31,31,31,31,]),'logica_and':([2,13,26,51,56,57,58,63,64,66,124,130,131,132,134,162,163,172,176,],[32,32,32,32,32,32,32,101,32,32,32,32,32,32,32,32,32,32,32,]),'llamada':([2,13,26,34,35,51,56,57,58,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,124,130,131,132,134,162,163,172,176,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'igualdad':([2,13,26,51,56,57,58,63,64,65,66,124,130,131,132,134,162,163,172,176,],[36,36,36,36,36,36,36,36,36,104,36,36,36,36,36,36,36,36,36,36,]),'primaria':([2,13,26,34,35,51,56,57,58,63,64,65,66,70,71,72,73,74,75,76,77,78,79,80,124,130,131,132,134,162,163,172,176,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'comparacion':([2,13,26,51,56,57,58,63,64,65,66,70,71,124,130,131,132,134,162,163,172,176,],[38,38,38,38,38,38,38,38,38,38,38,110,111,38,38,38,38,38,38,38,38,38,]),'termino':([2,13,26,51,56,57,58,63,64,65,66,70,71,72,73,74,75,124,130,131,132,134,162,163,172,176,],[47,47,47,47,47,47,47,47,47,47,47,47,47,112,113,114,115,47,47,47,47,47,47,47,47,47,]),'factor':([2,13,26,51,56,57,58,63,64,65,66,70,71,72,73,74,75,76,77,124,130,131,132,134,162,163,172,176,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,116,117,48,48,48,48,48,48,48,48,48,]),'hereda_opcional':([49,],[81,]),'tipo':([50,138,159,171,],[85,157,166,173,]),'para_inicializador':([58,],[96,]),'lista_argumentos_opcional':([66,],[105,]),'lista_argumentos':([66,],[106,]),'lista_parametros_opcional':([92,],[126,]),'lista_parametros':([92,],[127,]),'parametro':([92,140,],[129,161,]),'lista_miembros_clase':([121,],[135,]),'para_condicion':([132,],[143,]),'miembro_clase':([135,],[148,]),'declaracion_atributo':([135,],[149,]),'modificador_acceso':([135,],[151,]),'tipo_retorno':([139,],[158,]),'para_incremento':([163,],[168,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaraciones','programa',1,'p_programa','parser.py',40),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','parser.py',44),
  ('lista_declaraciones -> empty','lista_declaraciones',1,'p_lista_declaraciones','parser.py',45),
  ('declaracion -> declaracion_clase','declaracion',1,'p_declaracion','parser.py',53),
  ('declaracion -> declaracion_funcion','declaracion',1,'p_declaracion','parser.py',54),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','parser.py',55),
  ('declaracion -> sentencia','declaracion',1,'p_declaracion','parser.py',56),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_variable',4,'p_declaracion_variable','parser.py',60),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_variable',6,'p_declaracion_variable','parser.py',61),
  ('declaracion_funcion -> FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentencias','declaracion_funcion',7,'p_declaracion_funcion','parser.py',68),
  ('declaracion_clase -> CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACE','declaracion_clase',6,'p_declaracion_clase','parser.py',72),
  ('hereda_opcional -> HEREDA IDENTIFICADOR','hereda_opcional',2,'p_hereda_opcional','parser.py',76),
  ('hereda_opcional -> empty','hereda_opcional',1,'p_hereda_opcional','parser.py',77),
  ('lista_miembros_clase -> lista_miembros_clase miembro_clase','lista_miembros_clase',2,'p_lista_miembros_clase','parser.py',81),
  ('lista_miembros_clase -> empty','lista_miembros_clase',1,'p_lista_miembros_clase','parser.py',82),
  ('miembro_clase -> declaracion_atributo','miembro_clase',1,'p_miembro_clase','parser.py',89),
  ('miembro_clase -> declaracion_funcion','miembro_clase',1,'p_miembro_clase','parser.py',90),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_atributo',5,'p_declaracion_atributo','parser.py',94),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_atributo',7,'p_declaracion_atributo','parser.py',95),
  ('modificador_acceso -> PUBLICO','modificador_acceso',1,'p_modificador_acceso','parser.py',102),
  ('modificador_acceso -> PRIVADO','modificador_acceso',1,'p_modificador_acceso','parser.py',103),
  ('modificador_acceso -> PROTEGIDO','modificador_acceso',1,'p_modificador_acceso','parser.py',104),
  ('modificador_acceso -> empty','modificador_acceso',1,'p_modificador_acceso','parser.py',105),
  ('sentencia -> sentencia_expresion','sentencia',1,'p_sentencia','parser.py',110),
  ('sentencia -> bloque_sentencias','sentencia',1,'p_sentencia','parser.py',111),
  ('sentencia -> sentencia_si','sentencia',1,'p_sentencia','parser.py',112),
  ('sentencia -> sentencia_mientras','sentencia',1,'p_sentencia','parser.py',113),
  ('sentencia -> sentencia_para','sentencia',1,'p_sentencia','parser.py',114),
  ('sentencia -> sentencia_retornar','sentencia',1,'p_sentencia','parser.py',115),
  ('sentencia -> sentencia_romper','sentencia',1,'p_sentencia','parser.py',116),
  ('sentencia -> sentencia_continuar','sentencia',1,'p_sentencia','parser.py',117),
  ('sentencia_expresion -> expresion PUNTO_Y_COMA','sentencia_expresion',2,'p_sentencia_expresion','parser.py',121),
  ('bloque_sentencias -> LBRACE lista_declaraciones RBRACE','bloque_sentencias',3,'p_bloque_sentencias','parser.py',125),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia','sentencia_si',5,'p_sentencia_si','parser.py',129),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia SINO sentencia','sentencia_si',7,'p_sentencia_si','parser.py',130),
  ('sentencia_mientras -> MIENTRAS LPAREN expresion RPAREN sentencia','sentencia_mientras',5,'p_sentencia_mientras','parser.py',137),
  ('sentencia_para -> PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentencia','sentencia_para',9,'p_sentencia_para','parser.py',141),
  ('para_inicializador -> declaracion_variable','para_inicializador',1,'p_para_inicializador','parser.py',145),
  ('para_inicializador -> expresion','para_inicializador',1,'p_para_inicializador','parser.py',146),
  ('para_inicializador -> empty','para_inicializador',1,'p_para_inicializador','parser.py',147),
  ('para_condicion -> expresion','para_condicion',1,'p_para_condicion','parser.py',151),
  ('para_condicion -> empty','para_condicion',1,'p_para_condicion','parser.py',152),
  ('para_incremento -> expresion','para_incremento',1,'p_para_incremento','parser.py',156),
  ('para_incremento -> empty','para_incremento',1,'p_para_incremento','parser.py',157),
  ('sentencia_retornar -> RETORNAR PUNTO_Y_COMA','sentencia_retornar',2,'p_sentencia_retornar','parser.py',161),
  ('sentencia_retornar -> RETORNAR expresion PUNTO_Y_COMA','sentencia_retornar',3,'p_sentencia_retornar','parser.py',162),
  ('sentencia_romper -> ROMPER PUNTO_Y_COMA','sentencia_romper',2,'p_sentencia_romper','parser.py',166),
  ('sentencia_continuar -> CONTINUAR PUNTO_Y_COMA','sentencia_continuar',2,'p_sentencia_continuar','parser.py',170),
  ('expresion -> asignacion','expresion',1,'p_expresion','parser.py',175),
  ('asignacion -> logica_or','asignacion',1,'p_asignacion','parser.py',179),
  ('asignacion -> unario ASIGNACION asignacion','asignacion',3,'p_asignacion','parser.py',180),
  ('logica_or -> logica_and','logica_or',1,'p_logica_or','parser.py',187),
  ('logica_or -> logica_or O logica_and','logica_or',3,'p_logica_or','parser.py',188),
  ('logica_and -> igualdad','logica_and',1,'p_logica_and','parser.py',195),
  ('logica_and -> logica_and Y igualdad','logica_and',3,'p_logica_and','parser.py',196),
  ('igualdad -> comparacion','igualdad',1,'p_igualdad','parser.py',203),
  ('igualdad -> igualdad IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',204),
  ('igualdad -> igualdad NO_IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',205),
  ('comparacion -> termino','comparacion',1,'p_comparacion','parser.py',212),
  ('comparacion -> comparacion MENOR_QUE termino','comparacion',3,'p_comparacion','parser.py',213),
  ('comparacion -> comparacion MAYOR_QUE termino','comparacion',3,'p_comparacion','parser.py',214),
  ('comparacion -> comparacion MENOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',215),
  ('comparacion -> comparacion MAYOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',216),
  ('termino -> factor','termino',1,'p_termino','parser.py',223),
  ('termino -> termino SUMA factor','termino',3,'p_termino','parser.py',224),
  ('termino -> termino RESTA factor','termino',3,'p_termino','parser.py',225),
  ('factor -> unario','factor',1,'p_factor','parser.py',232),
  ('factor -> factor MULTIPLICACION unario','factor',3,'p_factor','parser.py',233),
  ('factor -> factor DIVISION unario','factor',3,'p_factor','parser.py',234),
  ('factor -> factor MODULO unario','factor',3,'p_factor','parser.py',235),
  ('unario -> llamada','unario',1,'p_unario','parser.py',242),
  ('unario -> NO unario','unario',2,'p_unario','parser.py',243),
  ('unario -> RESTA unario','unario',2,'p_unario','parser.py',244),
  ('llamada -> primaria','llamada',1,'p_llamada','parser.py',251),
  ('llamada -> llamada LPAREN lista_argumentos_opcional RPAREN','llamada',4,'p_llamada','parser.py',252),
  ('llamada -> llamada PUNTO IDENTIFICADOR','llamada',3,'p_llamada','parser.py',253),
  ('primaria -> VERDADERO','primaria',1,'p_primaria','parser.py',262),
  ('primaria -> FALSO','primaria',1,'p_primaria','parser.py',263),
  ('primaria -> NULO','primaria',1,'p_primaria','parser.py',264),
  ('primaria -> ENTERO','primaria',1,'p_primaria','parser.py',265),
  ('primaria -> DECIMAL','primaria',1,'p_primaria','parser.py',266),
  ('primaria -> CADENA','primaria',1,'p_primaria','parser.py',267),
  ('primaria -> IDENTIFICADOR','primaria',1,'p_primaria','parser.py',268),
  ('primaria -> ESTE','primaria',1,'p_primaria','parser.py',269),
  ('primaria -> SUPER','primaria',1,'p_primaria','parser.py',270),
  ('primaria -> LPAREN expresion RPAREN','primaria',3,'p_primaria','parser.py',271),
  ('tipo -> ENTERO_TIPO','tipo',1,'p_tipo','parser.py',285),
  ('tipo -> DECIMAL_TIPO','tipo',1,'p_tipo','parser.py',286),
  ('tipo -> CADENA_TIPO','tipo',1,'p_tipo','parser.py',287),
  ('tipo -> BOOLEANO_TIPO','tipo',1,'p_tipo','parser.py',288),
  ('tipo -> IDENTIFICADOR','tipo',1,'p_tipo','parser.py',289),
  ('tipo -> NULO','tipo',1,'p_tipo','parser.py',290),
  ('tipo_retorno -> DOS_PUNTOS tipo','tipo_retorno',2,'p_tipo_retorno','parser.py',294),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','parser.py',295),
  ('lista_parametros_opcional -> lista_parametros','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',299),
  ('lista_parametros_opcional -> empty','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',300),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','parser.py',304),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','parser.py',305),
  ('parametro -> IDENTIFICADOR DOS_PUNTOS tipo','parametro',3,'p_parametro','parser.py',312),
  ('lista_argumentos_opcional -> lista_argumentos','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',316),
  ('lista_argumentos_opcional -> empty','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',317),
  ('lista_argumentos -> expresion','lista_argumentos',1,'p_lista_argumentos','parser.py',321),
  ('lista_argumentos -> lista_argumentos COMA expresion','lista_argumentos',3,'p_lista_argumentos','parser.py',322),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',329),
]
