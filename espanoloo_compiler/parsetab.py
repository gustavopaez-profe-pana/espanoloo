
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programarightASIGNACIONASIGNACION_SUMAASIGNACION_RESTAASIGNACION_MULTIPLICACIONASIGNACION_DIVISIONASIGNACION_MODULOrightINTERROGACIONDOS_PUNTOSleftOleftYleftIGUALNO_IGUALleftMENOR_QUEMAYOR_QUEMENOR_IGUAL_QUEMAYOR_IGUAL_QUEleftSUMARESTAleftMULTIPLICACIONDIVISIONMODULOrightNOUMINUSleftINCREMENTODECREMENTOleftLPARENRPARENLBRACKETRBRACKETleftPUNTOrightSINOABSTRACTO AFIRMAR ASIGNACION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTIPLICACION ASIGNACION_RESTA ASIGNACION_SUMA ATRAPAR BOOLEANO_TIPO CADENA CADENA_TIPO CLASE COMA CONSTANTE CONSTRUCTOR CONTINUAR DECIMAL DECIMAL_TIPO DECREMENTO DIVISION DOS_PUNTOS EN ENTERO ENTERO_TIPO ESTE FALSO FINALMENTE FUNCION HACER HEREDA IDENTIFICADOR IGUAL IMPLEMENTA INCREMENTO INTENTAR INTERFAZ INTERROGACION LAMBDA LANZAR LBRACE LBRACKET LPAREN MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MIENTRAS MODULO MULTIPLICACION NO NO_IGUAL NUEVO NULO O PARA PRIVADO PROTEGIDO PUBLICO PUNTO PUNTO_Y_COMA RBRACE RBRACKET RESTA RETORNAR ROMPER RPAREN SI SINO SUMA SUPER TIPO_EXCEPCION VERDADERO Yprograma : lista_declaracioneslista_declaraciones : lista_declaraciones declaracion\n| emptydeclaracion : declaracion_clase\n| declaracion_funcion\n| declaracion_variable\n| sentenciadeclaracion_variable : IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAdeclaracion_funcion : modificador_acceso FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentenciasdeclaracion_constructor : modificador_acceso CONSTRUCTOR LPAREN lista_parametros_opcional RPAREN bloque_sentenciasdeclaracion_clase : CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACEhereda_opcional : HEREDA IDENTIFICADOR\n| emptylista_miembros_clase : lista_miembros_clase miembro_clase\n| emptymiembro_clase : declaracion_atributo\n| declaracion_funcion\n| declaracion_constructordeclaracion_atributo : modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAmodificador_acceso : PUBLICO\n| PRIVADO\n| PROTEGIDO\n| emptysentencia : sentencia_expresion\n| bloque_sentencias\n| sentencia_si\n| sentencia_mientras\n| sentencia_para\n| sentencia_retornar\n| sentencia_romper\n| sentencia_continuarsentencia_expresion : expresion PUNTO_Y_COMAbloque_sentencias : LBRACE lista_declaraciones RBRACEsentencia_si : SI LPAREN expresion RPAREN sentencia\n| SI LPAREN expresion RPAREN sentencia SINO sentenciasentencia_mientras : MIENTRAS LPAREN expresion RPAREN sentenciasentencia_para : PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentenciapara_inicializador : declaracion_variable\n| expresion\n| emptypara_condicion : expresion\n| emptypara_incremento : expresion\n| emptysentencia_retornar : RETORNAR PUNTO_Y_COMA\n| RETORNAR expresion PUNTO_Y_COMAsentencia_romper : ROMPER PUNTO_Y_COMAsentencia_continuar : CONTINUAR PUNTO_Y_COMAexpresion : asignacionasignacion : logica_or\n| unario ASIGNACION asignacionlogica_or : logica_and\n| logica_or O logica_andlogica_and : igualdad\n| logica_and Y igualdadigualdad : comparacion\n| igualdad IGUAL comparacion\n| igualdad NO_IGUAL comparacioncomparacion : termino\n| comparacion MENOR_QUE termino\n| comparacion MAYOR_QUE termino\n| comparacion MENOR_IGUAL_QUE termino\n| comparacion MAYOR_IGUAL_QUE terminotermino : factor\n| termino SUMA factor\n| termino RESTA factorfactor : unario\n| factor MULTIPLICACION unario\n| factor DIVISION unario\n| factor MODULO unariounario : llamada\n| NO unario\n| RESTA unario %prec UMINUSllamada : primaria\n| llamada LPAREN lista_argumentos_opcional RPAREN\n| llamada PUNTO IDENTIFICADORexpresion_nueva_instancia : NUEVO IDENTIFICADOR LPAREN lista_argumentos_opcional RPARENprimaria : VERDADERO\n| FALSO\n| NULO\n| ENTERO\n| DECIMAL\n| CADENA\n| IDENTIFICADOR\n| ESTE\n| SUPER\n| LPAREN expresion RPAREN\n| expresion_nueva_instanciatipo : ENTERO_TIPO\n| DECIMAL_TIPO\n| CADENA_TIPO\n| BOOLEANO_TIPO\n| IDENTIFICADOR\n| NULOtipo_retorno : DOS_PUNTOS tipo\n| emptylista_parametros_opcional : lista_parametros\n| emptylista_parametros : parametro\n| lista_parametros COMA parametroparametro : IDENTIFICADOR DOS_PUNTOS tipolista_argumentos_opcional : lista_argumentos\n| emptylista_argumentos : expresion\n| lista_argumentos COMA expresionempty :'
    
_lr_action_items = {'CLASE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,148,149,155,161,174,180,185,],[-108,9,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,9,-34,-47,-49,-50,-35,-48,-8,-36,-38,-12,-9,-37,-10,-39,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,11,13,14,16,17,18,19,20,21,22,23,24,25,26,30,38,39,53,56,57,58,61,62,63,64,65,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,85,86,87,89,98,107,125,129,131,132,133,134,135,136,138,140,141,148,149,155,156,157,158,159,160,161,162,164,165,166,171,174,178,179,180,182,185,186,187,190,191,],[-108,10,-3,-2,-4,-5,-6,-7,55,-108,60,-27,-26,-28,-29,-30,-31,-32,-33,-22,-23,-24,-25,60,60,60,84,91,10,99,-34,60,60,10,-47,-49,-50,60,60,60,60,116,60,60,60,60,60,60,60,60,60,60,60,130,-35,-48,60,-108,-8,60,143,60,60,60,60,-108,-16,-36,-38,-12,-15,-17,-18,-19,167,-9,91,143,60,60,91,-37,91,143,-10,60,-39,-20,60,-11,-21,]),'PUBLICO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,129,131,140,141,148,149,155,156,157,158,159,161,174,180,185,186,190,191,],[-108,23,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,23,-34,-47,-49,-50,-35,-48,-108,-8,23,-16,-36,-38,-12,-15,-17,-18,-19,-9,-37,-10,-39,-20,-11,-21,]),'PRIVADO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,129,131,140,141,148,149,155,156,157,158,159,161,174,180,185,186,190,191,],[-108,24,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,24,-34,-47,-49,-50,-35,-48,-108,-8,24,-16,-36,-38,-12,-15,-17,-18,-19,-9,-37,-10,-39,-20,-11,-21,]),'PROTEGIDO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,129,131,140,141,148,149,155,156,157,158,159,161,174,180,185,186,190,191,],[-108,25,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,25,-34,-47,-49,-50,-35,-48,-108,-8,25,-16,-36,-38,-12,-15,-17,-18,-19,-9,-37,-10,-39,-20,-11,-21,]),'LBRACE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,55,57,61,65,67,68,88,90,91,93,94,95,96,97,98,107,130,131,134,135,148,149,155,161,163,165,170,172,174,180,181,182,185,188,],[-108,11,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,-108,11,-34,-47,-49,-50,129,-14,-95,-91,-92,-93,-94,-96,-35,-48,-13,-8,11,11,-36,-38,-12,-9,-108,11,11,-98,-37,-10,-97,11,-39,11,]),'SI':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,27,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,27,-34,-47,-49,-50,-35,-48,-8,27,27,-36,-38,-12,-9,27,-37,-10,27,-39,]),'MIENTRAS':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,28,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,28,-34,-47,-49,-50,-35,-48,-8,28,28,-36,-38,-12,-9,28,-37,-10,28,-39,]),'PARA':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,29,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,29,-34,-47,-49,-50,-35,-48,-8,29,29,-36,-38,-12,-9,29,-37,-10,29,-39,]),'RETORNAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,30,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,30,-34,-47,-49,-50,-35,-48,-8,30,30,-36,-38,-12,-9,30,-37,-10,30,-39,]),'ROMPER':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,31,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,31,-34,-47,-49,-50,-35,-48,-8,31,31,-36,-38,-12,-9,31,-37,-10,31,-39,]),'CONTINUAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,131,134,135,148,149,155,161,165,174,180,182,185,],[-108,32,-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,32,-34,-47,-49,-50,-35,-48,-8,32,32,-36,-38,-12,-9,32,-37,-10,32,-39,]),'NO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,38,-3,-2,-4,-5,-6,-7,-108,38,-27,-26,-28,-29,-30,-31,-32,-33,38,38,38,38,-34,38,38,38,-47,-49,-50,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-35,-48,38,-8,38,38,38,38,38,-36,-38,-12,-9,38,38,-37,-10,38,-39,38,]),'RESTA':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,30,35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,57,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,98,100,107,109,116,119,120,121,122,123,124,125,126,127,128,131,132,134,135,136,137,138,148,149,154,155,161,165,166,174,180,182,185,187,],[-108,39,-3,-2,-4,-5,-6,-7,-86,-108,39,-27,-26,-28,-29,-30,-31,-32,-33,39,-69,-73,39,39,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,83,-66,39,-86,-34,39,39,39,-47,-49,-50,39,39,39,39,-74,-75,39,39,39,39,39,39,39,39,39,39,39,-35,-89,-48,-69,-78,83,83,83,83,-67,-68,39,-70,-71,-72,-8,39,39,39,39,-77,39,-36,-38,-79,-12,-9,39,39,-37,-10,39,-39,39,]),'VERDADERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,43,-3,-2,-4,-5,-6,-7,-108,43,-27,-26,-28,-29,-30,-31,-32,-33,43,43,43,43,-34,43,43,43,-47,-49,-50,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-35,-48,43,-8,43,43,43,43,43,-36,-38,-12,-9,43,43,-37,-10,43,-39,43,]),'FALSO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,44,-3,-2,-4,-5,-6,-7,-108,44,-27,-26,-28,-29,-30,-31,-32,-33,44,44,44,44,-34,44,44,44,-47,-49,-50,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-35,-48,44,-8,44,44,44,44,44,-36,-38,-12,-9,44,44,-37,-10,44,-39,44,]),'NULO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,56,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,162,165,166,171,174,178,180,182,185,187,],[-108,45,-3,-2,-4,-5,-6,-7,-108,45,-27,-26,-28,-29,-30,-31,-32,-33,45,45,45,97,45,-34,45,45,45,-47,-49,-50,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-35,-48,45,-8,45,45,45,45,45,-36,-38,-12,-9,97,45,45,97,-37,97,-10,45,-39,45,]),'ENTERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,46,-3,-2,-4,-5,-6,-7,-108,46,-27,-26,-28,-29,-30,-31,-32,-33,46,46,46,46,-34,46,46,46,-47,-49,-50,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-35,-48,46,-8,46,46,46,46,46,-36,-38,-12,-9,46,46,-37,-10,46,-39,46,]),'DECIMAL':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,47,-3,-2,-4,-5,-6,-7,-108,47,-27,-26,-28,-29,-30,-31,-32,-33,47,47,47,47,-34,47,47,47,-47,-49,-50,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-35,-48,47,-8,47,47,47,47,47,-36,-38,-12,-9,47,47,-37,-10,47,-39,47,]),'CADENA':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,48,-3,-2,-4,-5,-6,-7,-108,48,-27,-26,-28,-29,-30,-31,-32,-33,48,48,48,48,-34,48,48,48,-47,-49,-50,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-35,-48,48,-8,48,48,48,48,48,-36,-38,-12,-9,48,48,-37,-10,48,-39,48,]),'ESTE':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,49,-3,-2,-4,-5,-6,-7,-108,49,-27,-26,-28,-29,-30,-31,-32,-33,49,49,49,49,-34,49,49,49,-47,-49,-50,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-35,-48,49,-8,49,49,49,49,49,-36,-38,-12,-9,49,49,-37,-10,49,-39,49,]),'SUPER':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,50,-3,-2,-4,-5,-6,-7,-108,50,-27,-26,-28,-29,-30,-31,-32,-33,50,50,50,50,-34,50,50,50,-47,-49,-50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-35,-48,50,-8,50,50,50,50,50,-36,-38,-12,-9,50,50,-37,-10,50,-39,50,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,27,28,29,30,37,38,39,41,43,44,45,46,47,48,49,50,51,57,60,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,98,99,100,107,116,125,131,132,134,135,136,137,138,148,149,154,155,161,165,166,168,174,180,182,185,187,],[-108,13,-3,-2,-4,-5,-6,-7,-86,-108,13,-27,-26,-28,-29,-30,-31,-32,-33,62,63,64,13,72,13,13,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,13,-86,-34,13,13,13,-47,-49,-50,13,13,13,13,13,13,13,13,13,13,13,13,125,13,13,13,-35,133,-89,-48,-78,13,-8,13,13,13,13,-77,13,-36,-38,-79,-12,-9,13,13,179,-37,-10,13,-39,13,]),'NUEVO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,107,125,131,132,134,135,136,138,148,149,155,161,165,166,174,180,182,185,187,],[-108,53,-3,-2,-4,-5,-6,-7,-108,53,-27,-26,-28,-29,-30,-31,-32,-33,53,53,53,53,-34,53,53,53,-47,-49,-50,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-35,-48,53,-8,53,53,53,53,53,-36,-38,-12,-9,53,53,-37,-10,53,-39,53,]),'FUNCION':([0,2,3,4,5,6,7,8,11,12,14,16,17,18,19,20,21,22,23,24,25,26,57,61,65,67,68,98,107,129,131,140,141,148,149,155,156,157,158,159,160,161,174,180,185,186,190,191,],[-108,-108,-3,-2,-4,-5,-6,-7,-108,58,-27,-26,-28,-29,-30,-31,-32,-33,-22,-23,-24,-25,-108,-34,-47,-49,-50,-35,-48,-108,-8,-108,-16,-36,-38,-12,-15,-17,-18,-19,58,-9,-37,-10,-39,-20,-11,-21,]),'$end':([0,1,2,3,4,5,6,7,8,14,16,17,18,19,20,21,22,61,65,67,68,98,107,131,148,149,155,161,174,180,185,],[-108,0,-1,-3,-2,-4,-5,-6,-7,-27,-26,-28,-29,-30,-31,-32,-33,-34,-47,-49,-50,-35,-48,-8,-36,-38,-12,-9,-37,-10,-39,]),'RBRACE':([3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,107,129,131,140,141,148,149,155,156,157,158,159,161,174,180,185,186,190,191,],[-3,-2,-4,-5,-6,-7,-108,-27,-26,-28,-29,-30,-31,-32,-33,98,-34,-47,-49,-50,-35,-48,-108,-8,155,-16,-36,-38,-12,-15,-17,-18,-19,-9,-37,-10,-39,-20,-11,-21,]),'DOS_PUNTOS':([10,143,163,167,],[56,162,171,178,]),'PUNTO':([10,37,41,43,44,45,46,47,48,49,50,51,60,100,116,137,154,],[-86,73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-86,-89,-78,-77,-79,]),'ASIGNACION':([10,35,37,41,43,44,45,46,47,48,49,50,51,60,74,75,91,92,93,94,95,96,97,100,116,137,154,183,],[-86,70,-73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,-86,-74,-75,-95,132,-91,-92,-93,-94,-96,-89,-78,-77,-79,187,]),'MULTIPLICACION':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,109,116,123,124,126,127,128,137,154,],[-86,-69,-73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,85,-86,-74,-75,-89,-69,-78,85,85,-70,-71,-72,-77,-79,]),'DIVISION':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,109,116,123,124,126,127,128,137,154,],[-86,-69,-73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,86,-86,-74,-75,-89,-69,-78,86,86,-70,-71,-72,-77,-79,]),'MODULO':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,109,116,123,124,126,127,128,137,154,],[-86,-69,-73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,87,-86,-74,-75,-89,-69,-78,87,87,-70,-71,-72,-77,-79,]),'SUMA':([10,35,37,41,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,116,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,-76,-80,-81,-82,-83,-84,-85,-87,-88,-90,82,-66,-86,-74,-75,-89,-69,-78,82,82,82,82,-67,-68,-70,-71,-72,-77,-79,]),'MENOR_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,-76,78,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,-78,78,78,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'MAYOR_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,-76,79,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,-78,79,79,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'MENOR_IGUAL_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,-76,80,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,-78,80,80,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'MAYOR_IGUAL_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,-76,81,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,-78,81,81,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'IGUAL':([10,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,111,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,76,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,76,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'NO_IGUAL':([10,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,109,111,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,-73,77,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-69,77,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'Y':([10,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,108,109,111,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,-69,71,-73,-56,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,71,-69,-57,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'O':([10,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,108,109,111,116,117,118,119,120,121,122,123,124,126,127,128,137,154,],[-86,69,-69,-54,-73,-56,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-89,-55,-69,-57,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,-79,]),'PUNTO_Y_COMA':([10,15,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,64,66,74,75,91,92,93,94,95,96,97,100,103,104,105,106,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,128,131,136,137,142,150,151,152,154,161,183,189,],[-86,61,65,67,68,-51,-52,-69,-54,-73,-56,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-108,107,-74,-75,-95,131,-91,-92,-93,-94,-96,-89,136,-40,-41,-42,-55,-69,-53,-57,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-8,-108,-77,161,166,-43,-44,-79,-9,186,191,]),'SINO':([14,16,17,18,19,20,21,22,61,65,67,68,98,107,148,149,174,185,],[-27,-26,-28,-29,-30,-31,-32,-33,-34,-47,-49,-50,-35,-48,165,-38,-37,-39,]),'CONSTRUCTOR':([23,24,25,26,98,129,140,141,156,157,158,159,160,180,186,190,191,],[-22,-23,-24,-25,-35,-108,-108,-16,-15,-17,-18,-19,168,-10,-20,-11,-21,]),'RPAREN':([33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,72,74,75,91,93,94,95,96,97,100,101,102,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,133,137,139,144,145,146,147,153,154,166,169,173,175,176,177,179,184,],[-51,-52,-69,-54,-73,-56,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,100,-86,-108,-74,-75,-95,-91,-92,-93,-94,-96,-89,134,135,-55,-69,-53,-57,137,-104,-105,-106,-78,-59,-60,-62,-63,-64,-65,-67,-68,-108,-70,-71,-72,-108,-77,154,163,-99,-100,-101,-107,-79,-108,-103,-102,182,-45,-46,-108,188,]),'COMA':([33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,91,93,94,95,96,97,100,108,109,110,111,113,115,116,117,118,119,120,121,122,123,124,126,127,128,137,145,147,153,154,169,173,],[-51,-52,-69,-54,-73,-56,-76,-58,-80,-81,-82,-83,-84,-85,-87,-88,-90,-61,-66,-86,-74,-75,-95,-91,-92,-93,-94,-96,-89,-55,-69,-53,-57,138,-106,-78,-59,-60,-62,-63,-64,-65,-67,-68,-70,-71,-72,-77,164,-101,-107,-79,-103,-102,]),'HEREDA':([55,],[89,]),'ENTERO_TIPO':([56,162,171,178,],[93,93,93,93,]),'DECIMAL_TIPO':([56,162,171,178,],[94,94,94,94,]),'CADENA_TIPO':([56,162,171,178,],[95,95,95,95,]),'BOOLEANO_TIPO':([56,162,171,178,],[96,96,96,96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaraciones':([0,11,],[2,57,]),'empty':([0,2,11,55,57,64,72,125,129,133,136,140,163,166,179,],[3,26,3,90,26,106,114,114,141,146,152,26,172,177,146,]),'declaracion':([2,57,],[4,4,]),'declaracion_clase':([2,57,],[5,5,]),'declaracion_funcion':([2,57,140,],[6,6,158,]),'declaracion_variable':([2,57,64,],[7,7,104,]),'sentencia':([2,57,134,135,165,182,],[8,8,148,149,174,185,]),'modificador_acceso':([2,57,140,],[12,12,160,]),'bloque_sentencias':([2,57,134,135,165,170,182,188,],[14,14,14,14,14,180,14,190,]),'expresion':([2,13,30,57,62,63,64,72,125,132,134,135,136,138,165,166,182,187,],[15,59,66,15,101,102,105,115,115,142,15,15,151,153,15,176,15,189,]),'sentencia_expresion':([2,57,134,135,165,182,],[16,16,16,16,16,16,]),'sentencia_si':([2,57,134,135,165,182,],[17,17,17,17,17,17,]),'sentencia_mientras':([2,57,134,135,165,182,],[18,18,18,18,18,18,]),'sentencia_para':([2,57,134,135,165,182,],[19,19,19,19,19,19,]),'sentencia_retornar':([2,57,134,135,165,182,],[20,20,20,20,20,20,]),'sentencia_romper':([2,57,134,135,165,182,],[21,21,21,21,21,21,]),'sentencia_continuar':([2,57,134,135,165,182,],[22,22,22,22,22,22,]),'asignacion':([2,13,30,57,62,63,64,70,72,125,132,134,135,136,138,165,166,182,187,],[33,33,33,33,33,33,33,110,33,33,33,33,33,33,33,33,33,33,33,]),'logica_or':([2,13,30,57,62,63,64,70,72,125,132,134,135,136,138,165,166,182,187,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'unario':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,125,132,134,135,136,138,165,166,182,187,],[35,35,35,74,75,35,35,35,35,109,35,109,35,109,109,109,109,109,109,109,109,126,127,128,35,35,35,35,35,35,35,35,35,35,]),'logica_and':([2,13,30,57,62,63,64,69,70,72,125,132,134,135,136,138,165,166,182,187,],[36,36,36,36,36,36,36,108,36,36,36,36,36,36,36,36,36,36,36,36,]),'llamada':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,125,132,134,135,136,138,165,166,182,187,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'igualdad':([2,13,30,57,62,63,64,69,70,71,72,125,132,134,135,136,138,165,166,182,187,],[40,40,40,40,40,40,40,40,40,111,40,40,40,40,40,40,40,40,40,40,40,]),'primaria':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,125,132,134,135,136,138,165,166,182,187,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'comparacion':([2,13,30,57,62,63,64,69,70,71,72,76,77,125,132,134,135,136,138,165,166,182,187,],[42,42,42,42,42,42,42,42,42,42,42,117,118,42,42,42,42,42,42,42,42,42,42,]),'expresion_nueva_instancia':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,125,132,134,135,136,138,165,166,182,187,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'termino':([2,13,30,57,62,63,64,69,70,71,72,76,77,78,79,80,81,125,132,134,135,136,138,165,166,182,187,],[52,52,52,52,52,52,52,52,52,52,52,52,52,119,120,121,122,52,52,52,52,52,52,52,52,52,52,]),'factor':([2,13,30,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,125,132,134,135,136,138,165,166,182,187,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,123,124,54,54,54,54,54,54,54,54,54,54,]),'hereda_opcional':([55,],[88,]),'tipo':([56,162,171,178,],[92,169,181,183,]),'para_inicializador':([64,],[103,]),'lista_argumentos_opcional':([72,125,],[112,139,]),'lista_argumentos':([72,125,],[113,113,]),'lista_miembros_clase':([129,],[140,]),'lista_parametros_opcional':([133,179,],[144,184,]),'lista_parametros':([133,179,],[145,145,]),'parametro':([133,164,179,],[147,173,147,]),'para_condicion':([136,],[150,]),'miembro_clase':([140,],[156,]),'declaracion_atributo':([140,],[157,]),'declaracion_constructor':([140,],[159,]),'tipo_retorno':([163,],[170,]),'para_incremento':([166,],[175,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaraciones','programa',1,'p_programa','parser.py',40),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','parser.py',44),
  ('lista_declaraciones -> empty','lista_declaraciones',1,'p_lista_declaraciones','parser.py',45),
  ('declaracion -> declaracion_clase','declaracion',1,'p_declaracion','parser.py',53),
  ('declaracion -> declaracion_funcion','declaracion',1,'p_declaracion','parser.py',54),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','parser.py',55),
  ('declaracion -> sentencia','declaracion',1,'p_declaracion','parser.py',56),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_variable',4,'p_declaracion_variable','parser.py',60),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_variable',6,'p_declaracion_variable','parser.py',61),
  ('declaracion_funcion -> modificador_acceso FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentencias','declaracion_funcion',8,'p_declaracion_funcion','parser.py',68),
  ('declaracion_constructor -> modificador_acceso CONSTRUCTOR LPAREN lista_parametros_opcional RPAREN bloque_sentencias','declaracion_constructor',6,'p_declaracion_constructor','parser.py',72),
  ('declaracion_clase -> CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACE','declaracion_clase',6,'p_declaracion_clase','parser.py',76),
  ('hereda_opcional -> HEREDA IDENTIFICADOR','hereda_opcional',2,'p_hereda_opcional','parser.py',80),
  ('hereda_opcional -> empty','hereda_opcional',1,'p_hereda_opcional','parser.py',81),
  ('lista_miembros_clase -> lista_miembros_clase miembro_clase','lista_miembros_clase',2,'p_lista_miembros_clase','parser.py',85),
  ('lista_miembros_clase -> empty','lista_miembros_clase',1,'p_lista_miembros_clase','parser.py',86),
  ('miembro_clase -> declaracion_atributo','miembro_clase',1,'p_miembro_clase','parser.py',93),
  ('miembro_clase -> declaracion_funcion','miembro_clase',1,'p_miembro_clase','parser.py',94),
  ('miembro_clase -> declaracion_constructor','miembro_clase',1,'p_miembro_clase','parser.py',95),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_atributo',5,'p_declaracion_atributo','parser.py',99),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_atributo',7,'p_declaracion_atributo','parser.py',100),
  ('modificador_acceso -> PUBLICO','modificador_acceso',1,'p_modificador_acceso','parser.py',107),
  ('modificador_acceso -> PRIVADO','modificador_acceso',1,'p_modificador_acceso','parser.py',108),
  ('modificador_acceso -> PROTEGIDO','modificador_acceso',1,'p_modificador_acceso','parser.py',109),
  ('modificador_acceso -> empty','modificador_acceso',1,'p_modificador_acceso','parser.py',110),
  ('sentencia -> sentencia_expresion','sentencia',1,'p_sentencia','parser.py',115),
  ('sentencia -> bloque_sentencias','sentencia',1,'p_sentencia','parser.py',116),
  ('sentencia -> sentencia_si','sentencia',1,'p_sentencia','parser.py',117),
  ('sentencia -> sentencia_mientras','sentencia',1,'p_sentencia','parser.py',118),
  ('sentencia -> sentencia_para','sentencia',1,'p_sentencia','parser.py',119),
  ('sentencia -> sentencia_retornar','sentencia',1,'p_sentencia','parser.py',120),
  ('sentencia -> sentencia_romper','sentencia',1,'p_sentencia','parser.py',121),
  ('sentencia -> sentencia_continuar','sentencia',1,'p_sentencia','parser.py',122),
  ('sentencia_expresion -> expresion PUNTO_Y_COMA','sentencia_expresion',2,'p_sentencia_expresion','parser.py',126),
  ('bloque_sentencias -> LBRACE lista_declaraciones RBRACE','bloque_sentencias',3,'p_bloque_sentencias','parser.py',130),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia','sentencia_si',5,'p_sentencia_si','parser.py',134),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia SINO sentencia','sentencia_si',7,'p_sentencia_si','parser.py',135),
  ('sentencia_mientras -> MIENTRAS LPAREN expresion RPAREN sentencia','sentencia_mientras',5,'p_sentencia_mientras','parser.py',142),
  ('sentencia_para -> PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentencia','sentencia_para',9,'p_sentencia_para','parser.py',146),
  ('para_inicializador -> declaracion_variable','para_inicializador',1,'p_para_inicializador','parser.py',150),
  ('para_inicializador -> expresion','para_inicializador',1,'p_para_inicializador','parser.py',151),
  ('para_inicializador -> empty','para_inicializador',1,'p_para_inicializador','parser.py',152),
  ('para_condicion -> expresion','para_condicion',1,'p_para_condicion','parser.py',156),
  ('para_condicion -> empty','para_condicion',1,'p_para_condicion','parser.py',157),
  ('para_incremento -> expresion','para_incremento',1,'p_para_incremento','parser.py',161),
  ('para_incremento -> empty','para_incremento',1,'p_para_incremento','parser.py',162),
  ('sentencia_retornar -> RETORNAR PUNTO_Y_COMA','sentencia_retornar',2,'p_sentencia_retornar','parser.py',166),
  ('sentencia_retornar -> RETORNAR expresion PUNTO_Y_COMA','sentencia_retornar',3,'p_sentencia_retornar','parser.py',167),
  ('sentencia_romper -> ROMPER PUNTO_Y_COMA','sentencia_romper',2,'p_sentencia_romper','parser.py',171),
  ('sentencia_continuar -> CONTINUAR PUNTO_Y_COMA','sentencia_continuar',2,'p_sentencia_continuar','parser.py',175),
  ('expresion -> asignacion','expresion',1,'p_expresion','parser.py',180),
  ('asignacion -> logica_or','asignacion',1,'p_asignacion','parser.py',184),
  ('asignacion -> unario ASIGNACION asignacion','asignacion',3,'p_asignacion','parser.py',185),
  ('logica_or -> logica_and','logica_or',1,'p_logica_or','parser.py',192),
  ('logica_or -> logica_or O logica_and','logica_or',3,'p_logica_or','parser.py',193),
  ('logica_and -> igualdad','logica_and',1,'p_logica_and','parser.py',200),
  ('logica_and -> logica_and Y igualdad','logica_and',3,'p_logica_and','parser.py',201),
  ('igualdad -> comparacion','igualdad',1,'p_igualdad','parser.py',208),
  ('igualdad -> igualdad IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',209),
  ('igualdad -> igualdad NO_IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',210),
  ('comparacion -> termino','comparacion',1,'p_comparacion','parser.py',217),
  ('comparacion -> comparacion MENOR_QUE termino','comparacion',3,'p_comparacion','parser.py',218),
  ('comparacion -> comparacion MAYOR_QUE termino','comparacion',3,'p_comparacion','parser.py',219),
  ('comparacion -> comparacion MENOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',220),
  ('comparacion -> comparacion MAYOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',221),
  ('termino -> factor','termino',1,'p_termino','parser.py',228),
  ('termino -> termino SUMA factor','termino',3,'p_termino','parser.py',229),
  ('termino -> termino RESTA factor','termino',3,'p_termino','parser.py',230),
  ('factor -> unario','factor',1,'p_factor','parser.py',237),
  ('factor -> factor MULTIPLICACION unario','factor',3,'p_factor','parser.py',238),
  ('factor -> factor DIVISION unario','factor',3,'p_factor','parser.py',239),
  ('factor -> factor MODULO unario','factor',3,'p_factor','parser.py',240),
  ('unario -> llamada','unario',1,'p_unario','parser.py',247),
  ('unario -> NO unario','unario',2,'p_unario','parser.py',248),
  ('unario -> RESTA unario','unario',2,'p_unario','parser.py',249),
  ('llamada -> primaria','llamada',1,'p_llamada','parser.py',256),
  ('llamada -> llamada LPAREN lista_argumentos_opcional RPAREN','llamada',4,'p_llamada','parser.py',257),
  ('llamada -> llamada PUNTO IDENTIFICADOR','llamada',3,'p_llamada','parser.py',258),
  ('expresion_nueva_instancia -> NUEVO IDENTIFICADOR LPAREN lista_argumentos_opcional RPAREN','expresion_nueva_instancia',5,'p_expresion_nueva_instancia','parser.py',267),
  ('primaria -> VERDADERO','primaria',1,'p_primaria','parser.py',271),
  ('primaria -> FALSO','primaria',1,'p_primaria','parser.py',272),
  ('primaria -> NULO','primaria',1,'p_primaria','parser.py',273),
  ('primaria -> ENTERO','primaria',1,'p_primaria','parser.py',274),
  ('primaria -> DECIMAL','primaria',1,'p_primaria','parser.py',275),
  ('primaria -> CADENA','primaria',1,'p_primaria','parser.py',276),
  ('primaria -> IDENTIFICADOR','primaria',1,'p_primaria','parser.py',277),
  ('primaria -> ESTE','primaria',1,'p_primaria','parser.py',278),
  ('primaria -> SUPER','primaria',1,'p_primaria','parser.py',279),
  ('primaria -> LPAREN expresion RPAREN','primaria',3,'p_primaria','parser.py',280),
  ('primaria -> expresion_nueva_instancia','primaria',1,'p_primaria','parser.py',281),
  ('tipo -> ENTERO_TIPO','tipo',1,'p_tipo','parser.py',297),
  ('tipo -> DECIMAL_TIPO','tipo',1,'p_tipo','parser.py',298),
  ('tipo -> CADENA_TIPO','tipo',1,'p_tipo','parser.py',299),
  ('tipo -> BOOLEANO_TIPO','tipo',1,'p_tipo','parser.py',300),
  ('tipo -> IDENTIFICADOR','tipo',1,'p_tipo','parser.py',301),
  ('tipo -> NULO','tipo',1,'p_tipo','parser.py',302),
  ('tipo_retorno -> DOS_PUNTOS tipo','tipo_retorno',2,'p_tipo_retorno','parser.py',306),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','parser.py',307),
  ('lista_parametros_opcional -> lista_parametros','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',311),
  ('lista_parametros_opcional -> empty','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',312),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','parser.py',316),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','parser.py',317),
  ('parametro -> IDENTIFICADOR DOS_PUNTOS tipo','parametro',3,'p_parametro','parser.py',324),
  ('lista_argumentos_opcional -> lista_argumentos','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',328),
  ('lista_argumentos_opcional -> empty','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',329),
  ('lista_argumentos -> expresion','lista_argumentos',1,'p_lista_argumentos','parser.py',333),
  ('lista_argumentos -> lista_argumentos COMA expresion','lista_argumentos',3,'p_lista_argumentos','parser.py',334),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',341),
]
