
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programarightASIGNACIONASIGNACION_SUMAASIGNACION_RESTAASIGNACION_MULTIPLICACIONASIGNACION_DIVISIONASIGNACION_MODULOrightINTERROGACIONDOS_PUNTOSleftOleftYleftIGUALNO_IGUALleftMENOR_QUEMAYOR_QUEMENOR_IGUAL_QUEMAYOR_IGUAL_QUEleftSUMARESTAleftMULTIPLICACIONDIVISIONMODULOrightNOUMINUSleftINCREMENTODECREMENTOleftLPARENRPARENLBRACKETRBRACKETleftPUNTOrightSINOABSTRACTO AFIRMAR ASIGNACION ASIGNACION_DIVISION ASIGNACION_MODULO ASIGNACION_MULTIPLICACION ASIGNACION_RESTA ASIGNACION_SUMA ATRAPAR BOOLEANO_TIPO CADENA CADENA_TIPO CLASE COMA CONSTANTE CONSTRUCTOR CONTINUAR DECIMAL DECIMAL_TIPO DECREMENTO DIVISION DOS_PUNTOS EN ENTERO ENTERO_TIPO ESTE FALSO FINALMENTE FUNCION HACER HEREDA IDENTIFICADOR IGUAL IMPLEMENTA INCREMENTO INTENTAR INTERFAZ INTERROGACION LAMBDA LANZAR LBRACE LBRACKET LPAREN MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MIENTRAS MODULO MULTIPLICACION NO NO_IGUAL NUEVO NULO O PARA PRIVADO PROTEGIDO PUBLICO PUNTO PUNTO_Y_COMA RBRACE RBRACKET RESTA RETORNAR ROMPER RPAREN SI SINO SUMA SUPER TIPO_EXCEPCION VERDADERO Yprograma : lista_declaracioneslista_declaraciones : lista_declaraciones declaracion\n| emptydeclaracion : declaracion_clase\n| declaracion_funcion\n| declaracion_variable\n| sentenciadeclaracion_variable : IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAdeclaracion_variable_sin_pc : IDENTIFICADOR DOS_PUNTOS tipo\n| IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresiondeclaracion_funcion : modificador_acceso FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentenciasdeclaracion_constructor : modificador_acceso CONSTRUCTOR LPAREN lista_parametros_opcional RPAREN bloque_sentenciasdeclaracion_clase : CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACEhereda_opcional : HEREDA IDENTIFICADOR\n| emptylista_miembros_clase : lista_miembros_clase miembro_clase\n| emptymiembro_clase : declaracion_atributo\n| declaracion_funcion\n| declaracion_constructordeclaracion_atributo : modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA\n| modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMAmodificador_acceso : PUBLICO\n| PRIVADO\n| PROTEGIDO\n| emptysentencia : sentencia_expresion\n| bloque_sentencias\n| sentencia_si\n| sentencia_mientras\n| sentencia_para\n| sentencia_retornar\n| sentencia_romper\n| sentencia_continuarsentencia_expresion : expresion PUNTO_Y_COMAbloque_sentencias : LBRACE lista_declaraciones RBRACEsentencia_si : SI LPAREN expresion RPAREN sentencia\n| SI LPAREN expresion RPAREN sentencia SINO sentenciasentencia_mientras : MIENTRAS LPAREN expresion RPAREN sentenciasentencia_para : PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentenciapara_inicializador : declaracion_variable_sin_pc\n| expresion\n| emptypara_condicion : expresion\n| emptypara_incremento : expresion\n| emptysentencia_retornar : RETORNAR PUNTO_Y_COMA\n| RETORNAR expresion PUNTO_Y_COMAsentencia_romper : ROMPER PUNTO_Y_COMAsentencia_continuar : CONTINUAR PUNTO_Y_COMAexpresion : asignacionasignacion : logica_or\n| unario ASIGNACION asignacionlogica_or : logica_and\n| logica_or O logica_andlogica_and : igualdad\n| logica_and Y igualdadigualdad : comparacion\n| igualdad IGUAL comparacion\n| igualdad NO_IGUAL comparacioncomparacion : termino\n| comparacion MENOR_QUE termino\n| comparacion MAYOR_QUE termino\n| comparacion MENOR_IGUAL_QUE termino\n| comparacion MAYOR_IGUAL_QUE terminotermino : factor\n| termino SUMA factor\n| termino RESTA factorfactor : unario\n| factor MULTIPLICACION unario\n| factor DIVISION unario\n| factor MODULO unariounario : llamada\n| NO unario\n| RESTA unario %prec UMINUSllamada : primaria\n| llamada LPAREN lista_argumentos_opcional RPAREN\n| llamada PUNTO IDENTIFICADORexpresion_nueva_instancia : NUEVO IDENTIFICADOR LPAREN lista_argumentos_opcional RPARENprimaria : VERDADERO\n| FALSO\n| NULO\n| ENTERO\n| DECIMAL\n| CADENA\n| IDENTIFICADOR\n| ESTE\n| SUPER\n| LPAREN expresion RPAREN\n| expresion_nueva_instanciatipo : ENTERO_TIPO\n| DECIMAL_TIPO\n| CADENA_TIPO\n| BOOLEANO_TIPO\n| IDENTIFICADOR\n| NULOtipo_retorno : DOS_PUNTOS tipo\n| emptylista_parametros_opcional : lista_parametros\n| emptylista_parametros : parametro\n| lista_parametros COMA parametroparametro : IDENTIFICADOR DOS_PUNTOS tipolista_argumentos_opcional : lista_argumentos\n| emptylista_argumentos : expresion\n| lista_argumentos COMA expresionempty :'
    
_lr_action_items = {'CLASE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,150,151,158,164,178,185,190,],[-110,9,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,9,-36,-49,-51,-52,-37,-50,-8,-38,-40,-14,-9,-39,-12,-41,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,11,13,14,16,17,18,19,20,21,22,23,24,25,26,30,38,39,53,56,57,58,61,62,63,64,65,67,68,69,70,71,72,73,76,77,78,79,80,81,82,83,85,86,87,89,98,108,126,130,132,133,134,135,136,137,138,140,142,143,150,151,158,159,160,161,162,163,164,165,167,168,169,170,175,178,183,184,185,187,190,191,192,195,196,],[-110,10,-3,-2,-4,-5,-6,-7,55,-110,60,-29,-28,-30,-31,-32,-33,-34,-35,-24,-25,-26,-27,60,60,60,84,91,10,99,-36,60,60,107,-49,-51,-52,60,60,60,60,117,60,60,60,60,60,60,60,60,60,60,60,131,-37,-50,60,-110,-8,60,145,60,60,60,91,60,-110,-18,-38,-40,-14,-17,-19,-20,-21,171,-9,91,145,60,60,60,91,-39,91,145,-12,60,-41,-22,60,-13,-23,]),'PUBLICO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,130,132,142,143,150,151,158,159,160,161,162,164,178,185,190,191,195,196,],[-110,23,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,23,-36,-49,-51,-52,-37,-50,-110,-8,23,-18,-38,-40,-14,-17,-19,-20,-21,-9,-39,-12,-41,-22,-13,-23,]),'PRIVADO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,130,132,142,143,150,151,158,159,160,161,162,164,178,185,190,191,195,196,],[-110,24,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,24,-36,-49,-51,-52,-37,-50,-110,-8,24,-18,-38,-40,-14,-17,-19,-20,-21,-9,-39,-12,-41,-22,-13,-23,]),'PROTEGIDO':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,130,132,142,143,150,151,158,159,160,161,162,164,178,185,190,191,195,196,],[-110,25,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,25,-36,-49,-51,-52,-37,-50,-110,-8,25,-18,-38,-40,-14,-17,-19,-20,-21,-9,-39,-12,-41,-22,-13,-23,]),'LBRACE':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,55,57,61,65,67,68,88,90,91,93,94,95,96,97,98,108,131,132,135,136,150,151,158,164,166,168,174,176,178,185,186,187,190,193,],[-110,11,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,-110,11,-36,-49,-51,-52,130,-16,-97,-93,-94,-95,-96,-98,-37,-50,-15,-8,11,11,-38,-40,-14,-9,-110,11,11,-100,-39,-12,-99,11,-41,11,]),'SI':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,27,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,27,-36,-49,-51,-52,-37,-50,-8,27,27,-38,-40,-14,-9,27,-39,-12,27,-41,]),'MIENTRAS':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,28,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,28,-36,-49,-51,-52,-37,-50,-8,28,28,-38,-40,-14,-9,28,-39,-12,28,-41,]),'PARA':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,29,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,29,-36,-49,-51,-52,-37,-50,-8,29,29,-38,-40,-14,-9,29,-39,-12,29,-41,]),'RETORNAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,30,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,30,-36,-49,-51,-52,-37,-50,-8,30,30,-38,-40,-14,-9,30,-39,-12,30,-41,]),'ROMPER':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,31,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,31,-36,-49,-51,-52,-37,-50,-8,31,31,-38,-40,-14,-9,31,-39,-12,31,-41,]),'CONTINUAR':([0,2,3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,132,135,136,150,151,158,164,168,178,185,187,190,],[-110,32,-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,32,-36,-49,-51,-52,-37,-50,-8,32,32,-38,-40,-14,-9,32,-39,-12,32,-41,]),'NO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,38,-3,-2,-4,-5,-6,-7,-110,38,-29,-28,-30,-31,-32,-33,-34,-35,38,38,38,38,-36,38,38,38,-49,-51,-52,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-37,-50,38,-8,38,38,38,38,38,-38,-40,-14,-9,38,38,38,-39,-12,38,-41,38,]),'RESTA':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,30,35,37,38,39,41,43,44,45,46,47,48,49,50,51,52,54,57,60,61,62,63,64,65,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,85,86,87,98,100,107,108,110,117,120,121,122,123,124,125,126,127,128,129,132,133,135,136,137,139,140,150,151,157,158,164,168,169,170,178,185,187,190,192,],[-110,39,-3,-2,-4,-5,-6,-7,-88,-110,39,-29,-28,-30,-31,-32,-33,-34,-35,39,-71,-75,39,39,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,83,-68,39,-88,-36,39,39,39,-49,-51,-52,39,39,39,39,-76,-77,39,39,39,39,39,39,39,39,39,39,39,-37,-91,-88,-50,-71,-80,83,83,83,83,-69,-70,39,-72,-73,-74,-8,39,39,39,39,-79,39,-38,-40,-81,-14,-9,39,39,39,-39,-12,39,-41,39,]),'VERDADERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,43,-3,-2,-4,-5,-6,-7,-110,43,-29,-28,-30,-31,-32,-33,-34,-35,43,43,43,43,-36,43,43,43,-49,-51,-52,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-37,-50,43,-8,43,43,43,43,43,-38,-40,-14,-9,43,43,43,-39,-12,43,-41,43,]),'FALSO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,44,-3,-2,-4,-5,-6,-7,-110,44,-29,-28,-30,-31,-32,-33,-34,-35,44,44,44,44,-36,44,44,44,-49,-51,-52,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-37,-50,44,-8,44,44,44,44,44,-38,-40,-14,-9,44,44,44,-39,-12,44,-41,44,]),'NULO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,56,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,138,140,150,151,158,164,165,168,169,170,175,178,183,185,187,190,192,],[-110,45,-3,-2,-4,-5,-6,-7,-110,45,-29,-28,-30,-31,-32,-33,-34,-35,45,45,45,97,45,-36,45,45,45,-49,-51,-52,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-37,-50,45,-8,45,45,45,45,97,45,-38,-40,-14,-9,97,45,45,45,97,-39,97,-12,45,-41,45,]),'ENTERO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,46,-3,-2,-4,-5,-6,-7,-110,46,-29,-28,-30,-31,-32,-33,-34,-35,46,46,46,46,-36,46,46,46,-49,-51,-52,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-37,-50,46,-8,46,46,46,46,46,-38,-40,-14,-9,46,46,46,-39,-12,46,-41,46,]),'DECIMAL':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,47,-3,-2,-4,-5,-6,-7,-110,47,-29,-28,-30,-31,-32,-33,-34,-35,47,47,47,47,-36,47,47,47,-49,-51,-52,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-37,-50,47,-8,47,47,47,47,47,-38,-40,-14,-9,47,47,47,-39,-12,47,-41,47,]),'CADENA':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,48,-3,-2,-4,-5,-6,-7,-110,48,-29,-28,-30,-31,-32,-33,-34,-35,48,48,48,48,-36,48,48,48,-49,-51,-52,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-37,-50,48,-8,48,48,48,48,48,-38,-40,-14,-9,48,48,48,-39,-12,48,-41,48,]),'ESTE':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,49,-3,-2,-4,-5,-6,-7,-110,49,-29,-28,-30,-31,-32,-33,-34,-35,49,49,49,49,-36,49,49,49,-49,-51,-52,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-37,-50,49,-8,49,49,49,49,49,-38,-40,-14,-9,49,49,49,-39,-12,49,-41,49,]),'SUPER':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,50,-3,-2,-4,-5,-6,-7,-110,50,-29,-28,-30,-31,-32,-33,-34,-35,50,50,50,50,-36,50,50,50,-49,-51,-52,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-37,-50,50,-8,50,50,50,50,50,-38,-40,-14,-9,50,50,50,-39,-12,50,-41,50,]),'LPAREN':([0,2,3,4,5,6,7,8,10,11,13,14,16,17,18,19,20,21,22,27,28,29,30,37,38,39,41,43,44,45,46,47,48,49,50,51,57,60,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,98,99,100,107,108,117,126,132,133,135,136,137,139,140,150,151,157,158,164,168,169,170,172,178,185,187,190,192,],[-110,13,-3,-2,-4,-5,-6,-7,-88,-110,13,-29,-28,-30,-31,-32,-33,-34,-35,62,63,64,13,72,13,13,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,13,-88,-36,13,13,13,-49,-51,-52,13,13,13,13,13,13,13,13,13,13,13,13,126,13,13,13,-37,134,-91,-88,-50,-80,13,-8,13,13,13,13,-79,13,-38,-40,-81,-14,-9,13,13,13,184,-39,-12,13,-41,13,]),'NUEVO':([0,2,3,4,5,6,7,8,11,13,14,16,17,18,19,20,21,22,30,38,39,57,61,62,63,64,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,98,108,126,132,133,135,136,137,140,150,151,158,164,168,169,170,178,185,187,190,192,],[-110,53,-3,-2,-4,-5,-6,-7,-110,53,-29,-28,-30,-31,-32,-33,-34,-35,53,53,53,53,-36,53,53,53,-49,-51,-52,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-37,-50,53,-8,53,53,53,53,53,-38,-40,-14,-9,53,53,53,-39,-12,53,-41,53,]),'FUNCION':([0,2,3,4,5,6,7,8,11,12,14,16,17,18,19,20,21,22,23,24,25,26,57,61,65,67,68,98,108,130,132,142,143,150,151,158,159,160,161,162,163,164,178,185,190,191,195,196,],[-110,-110,-3,-2,-4,-5,-6,-7,-110,58,-29,-28,-30,-31,-32,-33,-34,-35,-24,-25,-26,-27,-110,-36,-49,-51,-52,-37,-50,-110,-8,-110,-18,-38,-40,-14,-17,-19,-20,-21,58,-9,-39,-12,-41,-22,-13,-23,]),'$end':([0,1,2,3,4,5,6,7,8,14,16,17,18,19,20,21,22,61,65,67,68,98,108,132,150,151,158,164,178,185,190,],[-110,0,-1,-3,-2,-4,-5,-6,-7,-29,-28,-30,-31,-32,-33,-34,-35,-36,-49,-51,-52,-37,-50,-8,-38,-40,-14,-9,-39,-12,-41,]),'RBRACE':([3,4,5,6,7,8,11,14,16,17,18,19,20,21,22,57,61,65,67,68,98,108,130,132,142,143,150,151,158,159,160,161,162,164,178,185,190,191,195,196,],[-3,-2,-4,-5,-6,-7,-110,-29,-28,-30,-31,-32,-33,-34,-35,98,-36,-49,-51,-52,-37,-50,-110,-8,158,-18,-38,-40,-14,-17,-19,-20,-21,-9,-39,-12,-41,-22,-13,-23,]),'DOS_PUNTOS':([10,107,145,166,171,],[56,138,165,175,183,]),'PUNTO':([10,37,41,43,44,45,46,47,48,49,50,51,60,100,107,117,139,157,],[-88,73,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,-88,-91,-88,-80,-79,-81,]),'ASIGNACION':([10,35,37,41,43,44,45,46,47,48,49,50,51,60,74,75,91,92,93,94,95,96,97,100,107,117,139,155,157,188,],[-88,70,-75,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,-88,-76,-77,-97,133,-93,-94,-95,-96,-98,-91,-88,-80,-79,170,-81,192,]),'MULTIPLICACION':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,107,110,117,124,125,127,128,129,139,157,],[-88,-71,-75,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,85,-88,-76,-77,-91,-88,-71,-80,85,85,-72,-73,-74,-79,-81,]),'DIVISION':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,107,110,117,124,125,127,128,129,139,157,],[-88,-71,-75,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,86,-88,-76,-77,-91,-88,-71,-80,86,86,-72,-73,-74,-79,-81,]),'MODULO':([10,35,37,41,43,44,45,46,47,48,49,50,51,54,60,74,75,100,107,110,117,124,125,127,128,129,139,157,],[-88,-71,-75,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,87,-88,-76,-77,-91,-88,-71,-80,87,87,-72,-73,-74,-79,-81,]),'SUMA':([10,35,37,41,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,117,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,-78,-82,-83,-84,-85,-86,-87,-89,-90,-92,82,-68,-88,-76,-77,-91,-88,-71,-80,82,82,82,82,-69,-70,-72,-73,-74,-79,-81,]),'MENOR_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,-78,78,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,-80,78,78,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'MAYOR_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,-78,79,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,-80,79,79,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'MENOR_IGUAL_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,-78,80,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,-80,80,80,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'MAYOR_IGUAL_QUE':([10,35,37,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,-78,81,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,-80,81,81,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'IGUAL':([10,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,112,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,76,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,76,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'NO_IGUAL':([10,35,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,110,112,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,-75,77,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-71,77,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'Y':([10,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,109,110,112,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,-71,71,-75,-58,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,71,-71,-59,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'O':([10,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,100,107,109,110,112,117,118,119,120,121,122,123,124,125,127,128,129,139,157,],[-88,69,-71,-56,-75,-58,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-91,-88,-57,-71,-59,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,-81,]),'PUNTO_Y_COMA':([10,15,30,31,32,33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,64,66,74,75,91,92,93,94,95,96,97,100,103,104,105,106,107,109,110,111,112,117,118,119,120,121,122,123,124,125,127,128,129,137,139,144,152,153,154,155,157,182,188,194,],[-88,61,65,67,68,-53,-54,-71,-56,-75,-58,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-110,108,-76,-77,-97,132,-93,-94,-95,-96,-98,-91,137,-42,-43,-44,-88,-57,-71,-55,-59,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-110,-79,164,169,-45,-46,-10,-81,-11,191,196,]),'SINO':([14,16,17,18,19,20,21,22,61,65,67,68,98,108,150,151,178,190,],[-29,-28,-30,-31,-32,-33,-34,-35,-36,-49,-51,-52,-37,-50,168,-40,-39,-41,]),'CONSTRUCTOR':([23,24,25,26,98,130,142,143,159,160,161,162,163,185,191,195,196,],[-24,-25,-26,-27,-37,-110,-110,-18,-17,-19,-20,-21,172,-12,-22,-13,-23,]),'RPAREN':([33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,59,60,72,74,75,91,93,94,95,96,97,100,101,102,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,134,139,141,146,147,148,149,156,157,169,173,177,179,180,181,184,189,],[-53,-54,-71,-56,-75,-58,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,100,-88,-110,-76,-77,-97,-93,-94,-95,-96,-98,-91,135,136,-57,-71,-55,-59,139,-106,-107,-108,-80,-61,-62,-64,-65,-66,-67,-69,-70,-110,-72,-73,-74,-110,-79,157,166,-101,-102,-103,-109,-81,-110,-105,-104,187,-47,-48,-110,193,]),'COMA':([33,34,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,54,60,74,75,91,93,94,95,96,97,100,109,110,111,112,114,116,117,118,119,120,121,122,123,124,125,127,128,129,139,147,149,156,157,173,177,],[-53,-54,-71,-56,-75,-58,-78,-60,-82,-83,-84,-85,-86,-87,-89,-90,-92,-63,-68,-88,-76,-77,-97,-93,-94,-95,-96,-98,-91,-57,-71,-55,-59,140,-108,-80,-61,-62,-64,-65,-66,-67,-69,-70,-72,-73,-74,-79,167,-103,-109,-81,-105,-104,]),'HEREDA':([55,],[89,]),'ENTERO_TIPO':([56,138,165,175,183,],[93,93,93,93,93,]),'DECIMAL_TIPO':([56,138,165,175,183,],[94,94,94,94,94,]),'CADENA_TIPO':([56,138,165,175,183,],[95,95,95,95,95,]),'BOOLEANO_TIPO':([56,138,165,175,183,],[96,96,96,96,96,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_declaraciones':([0,11,],[2,57,]),'empty':([0,2,11,55,57,64,72,126,130,134,137,142,166,169,184,],[3,26,3,90,26,106,115,115,143,148,154,26,176,181,148,]),'declaracion':([2,57,],[4,4,]),'declaracion_clase':([2,57,],[5,5,]),'declaracion_funcion':([2,57,142,],[6,6,161,]),'declaracion_variable':([2,57,],[7,7,]),'sentencia':([2,57,135,136,168,187,],[8,8,150,151,178,190,]),'modificador_acceso':([2,57,142,],[12,12,163,]),'bloque_sentencias':([2,57,135,136,168,174,187,193,],[14,14,14,14,14,185,14,195,]),'expresion':([2,13,30,57,62,63,64,72,126,133,135,136,137,140,168,169,170,187,192,],[15,59,66,15,101,102,105,116,116,144,15,15,153,156,15,180,182,15,194,]),'sentencia_expresion':([2,57,135,136,168,187,],[16,16,16,16,16,16,]),'sentencia_si':([2,57,135,136,168,187,],[17,17,17,17,17,17,]),'sentencia_mientras':([2,57,135,136,168,187,],[18,18,18,18,18,18,]),'sentencia_para':([2,57,135,136,168,187,],[19,19,19,19,19,19,]),'sentencia_retornar':([2,57,135,136,168,187,],[20,20,20,20,20,20,]),'sentencia_romper':([2,57,135,136,168,187,],[21,21,21,21,21,21,]),'sentencia_continuar':([2,57,135,136,168,187,],[22,22,22,22,22,22,]),'asignacion':([2,13,30,57,62,63,64,70,72,126,133,135,136,137,140,168,169,170,187,192,],[33,33,33,33,33,33,33,111,33,33,33,33,33,33,33,33,33,33,33,33,]),'logica_or':([2,13,30,57,62,63,64,70,72,126,133,135,136,137,140,168,169,170,187,192,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'unario':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,126,133,135,136,137,140,168,169,170,187,192,],[35,35,35,74,75,35,35,35,35,110,35,110,35,110,110,110,110,110,110,110,110,127,128,129,35,35,35,35,35,35,35,35,35,35,35,]),'logica_and':([2,13,30,57,62,63,64,69,70,72,126,133,135,136,137,140,168,169,170,187,192,],[36,36,36,36,36,36,36,109,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'llamada':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,126,133,135,136,137,140,168,169,170,187,192,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'igualdad':([2,13,30,57,62,63,64,69,70,71,72,126,133,135,136,137,140,168,169,170,187,192,],[40,40,40,40,40,40,40,40,40,112,40,40,40,40,40,40,40,40,40,40,40,40,]),'primaria':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,126,133,135,136,137,140,168,169,170,187,192,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'comparacion':([2,13,30,57,62,63,64,69,70,71,72,76,77,126,133,135,136,137,140,168,169,170,187,192,],[42,42,42,42,42,42,42,42,42,42,42,118,119,42,42,42,42,42,42,42,42,42,42,42,]),'expresion_nueva_instancia':([2,13,30,38,39,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,85,86,87,126,133,135,136,137,140,168,169,170,187,192,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'termino':([2,13,30,57,62,63,64,69,70,71,72,76,77,78,79,80,81,126,133,135,136,137,140,168,169,170,187,192,],[52,52,52,52,52,52,52,52,52,52,52,52,52,120,121,122,123,52,52,52,52,52,52,52,52,52,52,52,]),'factor':([2,13,30,57,62,63,64,69,70,71,72,76,77,78,79,80,81,82,83,126,133,135,136,137,140,168,169,170,187,192,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,124,125,54,54,54,54,54,54,54,54,54,54,54,]),'hereda_opcional':([55,],[88,]),'tipo':([56,138,165,175,183,],[92,155,173,186,188,]),'para_inicializador':([64,],[103,]),'declaracion_variable_sin_pc':([64,],[104,]),'lista_argumentos_opcional':([72,126,],[113,141,]),'lista_argumentos':([72,126,],[114,114,]),'lista_miembros_clase':([130,],[142,]),'lista_parametros_opcional':([134,184,],[146,189,]),'lista_parametros':([134,184,],[147,147,]),'parametro':([134,167,184,],[149,177,149,]),'para_condicion':([137,],[152,]),'miembro_clase':([142,],[159,]),'declaracion_atributo':([142,],[160,]),'declaracion_constructor':([142,],[162,]),'tipo_retorno':([166,],[174,]),'para_incremento':([169,],[179,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_declaraciones','programa',1,'p_programa','parser.py',40),
  ('lista_declaraciones -> lista_declaraciones declaracion','lista_declaraciones',2,'p_lista_declaraciones','parser.py',44),
  ('lista_declaraciones -> empty','lista_declaraciones',1,'p_lista_declaraciones','parser.py',45),
  ('declaracion -> declaracion_clase','declaracion',1,'p_declaracion','parser.py',53),
  ('declaracion -> declaracion_funcion','declaracion',1,'p_declaracion','parser.py',54),
  ('declaracion -> declaracion_variable','declaracion',1,'p_declaracion','parser.py',55),
  ('declaracion -> sentencia','declaracion',1,'p_declaracion','parser.py',56),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_variable',4,'p_declaracion_variable','parser.py',60),
  ('declaracion_variable -> IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_variable',6,'p_declaracion_variable','parser.py',61),
  ('declaracion_variable_sin_pc -> IDENTIFICADOR DOS_PUNTOS tipo','declaracion_variable_sin_pc',3,'p_declaracion_variable_sin_pc','parser.py',68),
  ('declaracion_variable_sin_pc -> IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion','declaracion_variable_sin_pc',5,'p_declaracion_variable_sin_pc','parser.py',69),
  ('declaracion_funcion -> modificador_acceso FUNCION IDENTIFICADOR LPAREN lista_parametros_opcional RPAREN tipo_retorno bloque_sentencias','declaracion_funcion',8,'p_declaracion_funcion','parser.py',76),
  ('declaracion_constructor -> modificador_acceso CONSTRUCTOR LPAREN lista_parametros_opcional RPAREN bloque_sentencias','declaracion_constructor',6,'p_declaracion_constructor','parser.py',80),
  ('declaracion_clase -> CLASE IDENTIFICADOR hereda_opcional LBRACE lista_miembros_clase RBRACE','declaracion_clase',6,'p_declaracion_clase','parser.py',84),
  ('hereda_opcional -> HEREDA IDENTIFICADOR','hereda_opcional',2,'p_hereda_opcional','parser.py',88),
  ('hereda_opcional -> empty','hereda_opcional',1,'p_hereda_opcional','parser.py',89),
  ('lista_miembros_clase -> lista_miembros_clase miembro_clase','lista_miembros_clase',2,'p_lista_miembros_clase','parser.py',93),
  ('lista_miembros_clase -> empty','lista_miembros_clase',1,'p_lista_miembros_clase','parser.py',94),
  ('miembro_clase -> declaracion_atributo','miembro_clase',1,'p_miembro_clase','parser.py',101),
  ('miembro_clase -> declaracion_funcion','miembro_clase',1,'p_miembro_clase','parser.py',102),
  ('miembro_clase -> declaracion_constructor','miembro_clase',1,'p_miembro_clase','parser.py',103),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo PUNTO_Y_COMA','declaracion_atributo',5,'p_declaracion_atributo','parser.py',107),
  ('declaracion_atributo -> modificador_acceso IDENTIFICADOR DOS_PUNTOS tipo ASIGNACION expresion PUNTO_Y_COMA','declaracion_atributo',7,'p_declaracion_atributo','parser.py',108),
  ('modificador_acceso -> PUBLICO','modificador_acceso',1,'p_modificador_acceso','parser.py',115),
  ('modificador_acceso -> PRIVADO','modificador_acceso',1,'p_modificador_acceso','parser.py',116),
  ('modificador_acceso -> PROTEGIDO','modificador_acceso',1,'p_modificador_acceso','parser.py',117),
  ('modificador_acceso -> empty','modificador_acceso',1,'p_modificador_acceso','parser.py',118),
  ('sentencia -> sentencia_expresion','sentencia',1,'p_sentencia','parser.py',123),
  ('sentencia -> bloque_sentencias','sentencia',1,'p_sentencia','parser.py',124),
  ('sentencia -> sentencia_si','sentencia',1,'p_sentencia','parser.py',125),
  ('sentencia -> sentencia_mientras','sentencia',1,'p_sentencia','parser.py',126),
  ('sentencia -> sentencia_para','sentencia',1,'p_sentencia','parser.py',127),
  ('sentencia -> sentencia_retornar','sentencia',1,'p_sentencia','parser.py',128),
  ('sentencia -> sentencia_romper','sentencia',1,'p_sentencia','parser.py',129),
  ('sentencia -> sentencia_continuar','sentencia',1,'p_sentencia','parser.py',130),
  ('sentencia_expresion -> expresion PUNTO_Y_COMA','sentencia_expresion',2,'p_sentencia_expresion','parser.py',134),
  ('bloque_sentencias -> LBRACE lista_declaraciones RBRACE','bloque_sentencias',3,'p_bloque_sentencias','parser.py',138),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia','sentencia_si',5,'p_sentencia_si','parser.py',142),
  ('sentencia_si -> SI LPAREN expresion RPAREN sentencia SINO sentencia','sentencia_si',7,'p_sentencia_si','parser.py',143),
  ('sentencia_mientras -> MIENTRAS LPAREN expresion RPAREN sentencia','sentencia_mientras',5,'p_sentencia_mientras','parser.py',150),
  ('sentencia_para -> PARA LPAREN para_inicializador PUNTO_Y_COMA para_condicion PUNTO_Y_COMA para_incremento RPAREN sentencia','sentencia_para',9,'p_sentencia_para','parser.py',154),
  ('para_inicializador -> declaracion_variable_sin_pc','para_inicializador',1,'p_para_inicializador','parser.py',158),
  ('para_inicializador -> expresion','para_inicializador',1,'p_para_inicializador','parser.py',159),
  ('para_inicializador -> empty','para_inicializador',1,'p_para_inicializador','parser.py',160),
  ('para_condicion -> expresion','para_condicion',1,'p_para_condicion','parser.py',164),
  ('para_condicion -> empty','para_condicion',1,'p_para_condicion','parser.py',165),
  ('para_incremento -> expresion','para_incremento',1,'p_para_incremento','parser.py',169),
  ('para_incremento -> empty','para_incremento',1,'p_para_incremento','parser.py',170),
  ('sentencia_retornar -> RETORNAR PUNTO_Y_COMA','sentencia_retornar',2,'p_sentencia_retornar','parser.py',174),
  ('sentencia_retornar -> RETORNAR expresion PUNTO_Y_COMA','sentencia_retornar',3,'p_sentencia_retornar','parser.py',175),
  ('sentencia_romper -> ROMPER PUNTO_Y_COMA','sentencia_romper',2,'p_sentencia_romper','parser.py',179),
  ('sentencia_continuar -> CONTINUAR PUNTO_Y_COMA','sentencia_continuar',2,'p_sentencia_continuar','parser.py',183),
  ('expresion -> asignacion','expresion',1,'p_expresion','parser.py',188),
  ('asignacion -> logica_or','asignacion',1,'p_asignacion','parser.py',192),
  ('asignacion -> unario ASIGNACION asignacion','asignacion',3,'p_asignacion','parser.py',193),
  ('logica_or -> logica_and','logica_or',1,'p_logica_or','parser.py',200),
  ('logica_or -> logica_or O logica_and','logica_or',3,'p_logica_or','parser.py',201),
  ('logica_and -> igualdad','logica_and',1,'p_logica_and','parser.py',208),
  ('logica_and -> logica_and Y igualdad','logica_and',3,'p_logica_and','parser.py',209),
  ('igualdad -> comparacion','igualdad',1,'p_igualdad','parser.py',216),
  ('igualdad -> igualdad IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',217),
  ('igualdad -> igualdad NO_IGUAL comparacion','igualdad',3,'p_igualdad','parser.py',218),
  ('comparacion -> termino','comparacion',1,'p_comparacion','parser.py',225),
  ('comparacion -> comparacion MENOR_QUE termino','comparacion',3,'p_comparacion','parser.py',226),
  ('comparacion -> comparacion MAYOR_QUE termino','comparacion',3,'p_comparacion','parser.py',227),
  ('comparacion -> comparacion MENOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',228),
  ('comparacion -> comparacion MAYOR_IGUAL_QUE termino','comparacion',3,'p_comparacion','parser.py',229),
  ('termino -> factor','termino',1,'p_termino','parser.py',236),
  ('termino -> termino SUMA factor','termino',3,'p_termino','parser.py',237),
  ('termino -> termino RESTA factor','termino',3,'p_termino','parser.py',238),
  ('factor -> unario','factor',1,'p_factor','parser.py',245),
  ('factor -> factor MULTIPLICACION unario','factor',3,'p_factor','parser.py',246),
  ('factor -> factor DIVISION unario','factor',3,'p_factor','parser.py',247),
  ('factor -> factor MODULO unario','factor',3,'p_factor','parser.py',248),
  ('unario -> llamada','unario',1,'p_unario','parser.py',255),
  ('unario -> NO unario','unario',2,'p_unario','parser.py',256),
  ('unario -> RESTA unario','unario',2,'p_unario','parser.py',257),
  ('llamada -> primaria','llamada',1,'p_llamada','parser.py',264),
  ('llamada -> llamada LPAREN lista_argumentos_opcional RPAREN','llamada',4,'p_llamada','parser.py',265),
  ('llamada -> llamada PUNTO IDENTIFICADOR','llamada',3,'p_llamada','parser.py',266),
  ('expresion_nueva_instancia -> NUEVO IDENTIFICADOR LPAREN lista_argumentos_opcional RPAREN','expresion_nueva_instancia',5,'p_expresion_nueva_instancia','parser.py',275),
  ('primaria -> VERDADERO','primaria',1,'p_primaria','parser.py',279),
  ('primaria -> FALSO','primaria',1,'p_primaria','parser.py',280),
  ('primaria -> NULO','primaria',1,'p_primaria','parser.py',281),
  ('primaria -> ENTERO','primaria',1,'p_primaria','parser.py',282),
  ('primaria -> DECIMAL','primaria',1,'p_primaria','parser.py',283),
  ('primaria -> CADENA','primaria',1,'p_primaria','parser.py',284),
  ('primaria -> IDENTIFICADOR','primaria',1,'p_primaria','parser.py',285),
  ('primaria -> ESTE','primaria',1,'p_primaria','parser.py',286),
  ('primaria -> SUPER','primaria',1,'p_primaria','parser.py',287),
  ('primaria -> LPAREN expresion RPAREN','primaria',3,'p_primaria','parser.py',288),
  ('primaria -> expresion_nueva_instancia','primaria',1,'p_primaria','parser.py',289),
  ('tipo -> ENTERO_TIPO','tipo',1,'p_tipo','parser.py',305),
  ('tipo -> DECIMAL_TIPO','tipo',1,'p_tipo','parser.py',306),
  ('tipo -> CADENA_TIPO','tipo',1,'p_tipo','parser.py',307),
  ('tipo -> BOOLEANO_TIPO','tipo',1,'p_tipo','parser.py',308),
  ('tipo -> IDENTIFICADOR','tipo',1,'p_tipo','parser.py',309),
  ('tipo -> NULO','tipo',1,'p_tipo','parser.py',310),
  ('tipo_retorno -> DOS_PUNTOS tipo','tipo_retorno',2,'p_tipo_retorno','parser.py',314),
  ('tipo_retorno -> empty','tipo_retorno',1,'p_tipo_retorno','parser.py',315),
  ('lista_parametros_opcional -> lista_parametros','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',319),
  ('lista_parametros_opcional -> empty','lista_parametros_opcional',1,'p_lista_parametros_opcional','parser.py',320),
  ('lista_parametros -> parametro','lista_parametros',1,'p_lista_parametros','parser.py',324),
  ('lista_parametros -> lista_parametros COMA parametro','lista_parametros',3,'p_lista_parametros','parser.py',325),
  ('parametro -> IDENTIFICADOR DOS_PUNTOS tipo','parametro',3,'p_parametro','parser.py',332),
  ('lista_argumentos_opcional -> lista_argumentos','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',336),
  ('lista_argumentos_opcional -> empty','lista_argumentos_opcional',1,'p_lista_argumentos_opcional','parser.py',337),
  ('lista_argumentos -> expresion','lista_argumentos',1,'p_lista_argumentos','parser.py',341),
  ('lista_argumentos -> lista_argumentos COMA expresion','lista_argumentos',3,'p_lista_argumentos','parser.py',342),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',349),
]
